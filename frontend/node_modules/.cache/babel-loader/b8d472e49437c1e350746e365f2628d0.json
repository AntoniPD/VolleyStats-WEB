{"ast":null,"code":"import { REGISTER_TEAM_SUCCESS, REGISTER_TEAM_FAIL, FETCH_TEAM_SUCCESS, FETCH_TEAM_FAIL, SET_MESSAGE } from \"./types\";\nimport TeamService from \"../services/team.service\";\nexport const createTeam = (name, token) => dispatch => {\n  return TeamService.createTeam(name, token).then(response => {\n    dispatch({\n      type: REGISTER_TEAM_SUCCESS\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: response.data.message\n    });\n    return Promise.resolve();\n  }, error => {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    dispatch({\n      type: REGISTER_TEAM_FAIL\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: message\n    });\n    return Promise.reject();\n  });\n};\nexport const getTeamById = header => dispatch => {\n  return TeamService.getTeamByUserId(header).then(response => {\n    dispatch({\n      type: FETCH_TEAM_SUCCESS\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: response.data.message\n    });\n    return Promise.resolve();\n  }, error => {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    dispatch({\n      type: FETCH_TEAM_FAIL\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: message\n    });\n    return Promise.reject();\n  });\n};","map":{"version":3,"sources":["/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/actions/team.js"],"names":["REGISTER_TEAM_SUCCESS","REGISTER_TEAM_FAIL","FETCH_TEAM_SUCCESS","FETCH_TEAM_FAIL","SET_MESSAGE","TeamService","createTeam","name","token","dispatch","then","response","type","payload","data","message","Promise","resolve","error","toString","reject","getTeamById","header","getTeamByUserId"],"mappings":"AAAA,SACEA,qBADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,eAJF,EAKEC,WALF,QAMO,SANP;AAOA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAkBC,QAAD,IAAc;AACvD,SAAOJ,WAAW,CAACC,UAAZ,CAAuBC,IAAvB,EAA6BC,KAA7B,EAAoCE,IAApC,CACJC,QAAD,IAAc;AACZF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEZ;AADC,KAAD,CAAR;AAIAS,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAER,WADC;AAEPS,MAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAFhB,KAAD,CAAR;AAKA,WAAOC,OAAO,CAACC,OAAR,EAAP;AACD,GAZI,EAaJC,KAAD,IAAW;AACT,UAAMH,OAAO,GACVG,KAAK,CAACP,QAAN,IACCO,KAAK,CAACP,QAAN,CAAeG,IADhB,IAECI,KAAK,CAACP,QAAN,CAAeG,IAAf,CAAoBC,OAFtB,IAGAG,KAAK,CAACH,OAHN,IAIAG,KAAK,CAACC,QAAN,EALF;AAOAV,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEX;AADC,KAAD,CAAR;AAIAQ,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAER,WADC;AAEPS,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAKA,WAAOC,OAAO,CAACI,MAAR,EAAP;AACD,GA/BI,CAAP;AAiCD,CAlCM;AAoCP,OAAO,MAAMC,WAAW,GAAIC,MAAD,IAAab,QAAD,IAAc;AACnD,SAAOJ,WAAW,CAACkB,eAAZ,CAA4BD,MAA5B,EAAoCZ,IAApC,CACJC,QAAD,IAAc;AACZF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEV;AADC,KAAD,CAAR;AAIAO,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAER,WADC;AAEPS,MAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAFhB,KAAD,CAAR;AAKA,WAAOC,OAAO,CAACC,OAAR,EAAP;AACD,GAZI,EAaJC,KAAD,IAAW;AACT,UAAMH,OAAO,GACVG,KAAK,CAACP,QAAN,IACCO,KAAK,CAACP,QAAN,CAAeG,IADhB,IAECI,KAAK,CAACP,QAAN,CAAeG,IAAf,CAAoBC,OAFtB,IAGAG,KAAK,CAACH,OAHN,IAIAG,KAAK,CAACC,QAAN,EALF;AAOAV,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAET;AADC,KAAD,CAAR;AAIAM,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAER,WADC;AAEPS,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAKA,WAAOC,OAAO,CAACI,MAAR,EAAP;AACD,GA/BI,CAAP;AAiCD,CAlCM","sourcesContent":["import {\n  REGISTER_TEAM_SUCCESS,\n  REGISTER_TEAM_FAIL,\n  FETCH_TEAM_SUCCESS,\n  FETCH_TEAM_FAIL,\n  SET_MESSAGE,\n} from \"./types\";\nimport TeamService from \"../services/team.service\";\n\nexport const createTeam = (name, token) => (dispatch) => {\n  return TeamService.createTeam(name, token).then(\n    (response) => {\n      dispatch({\n        type: REGISTER_TEAM_SUCCESS,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: response.data.message,\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: REGISTER_TEAM_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const getTeamById = (header) => (dispatch) => {\n  return TeamService.getTeamByUserId(header).then(\n    (response) => {\n      dispatch({\n        type: FETCH_TEAM_SUCCESS,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: response.data.message,\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: FETCH_TEAM_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n"]},"metadata":{},"sourceType":"module"}