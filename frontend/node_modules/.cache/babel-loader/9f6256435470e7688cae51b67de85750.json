{"ast":null,"code":"var _jsxFileName = \"/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/players/playersList.component.js\";\nimport React, { useState, useEffect } from \"react\";\nimport authHeader from \"../../services/auth-header\";\nimport PlayersListView from \"./playersListView.component\";\nimport { getPlayersByTeamId } from \"../../actions/player\";\nimport axios from \"axios\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { matchPath } from \"react-router\";\nimport player from \"../../reducers/player\";\nexport function PlayersList(props) {\n  //   const test = useParams();\n  //   console.log(test);\n  const location = useLocation();\n  console.log(location);\n  const match = matchPath(location.pathname, {\n    path: \"/team/:teamId/info\",\n    exact: true,\n    strict: false\n  });\n  const teamId = match.params.teamId;\n  localStorage.setItem(\"teamId\", JSON.stringify(teamId));\n  const [playersLoaded, setPlayersLoaded] = useState(false);\n  const [players, setPlayers] = useState([]);\n  const [error, setError] = useState(null);\n  const logged = authHeader(); //   console.log(logged);\n\n  const setPeriodError = error => {\n    setError(error);\n    setTimeout(() => {\n      setError(null);\n    }, 4000);\n  };\n\n  const loadPlayers = async () => {\n    try {\n      if (!playersLoaded) {\n        setPlayersLoaded(true);\n        const config = {\n          headers: {\n            Authorization: `Bearer ${logged.token}`\n          }\n        };\n        const response = await axios.get(\"http://localhost:8080/api/user/\" + logged.id + \"/team/\" + teamId + \"/player\", config); // console.log(response);\n\n        console.log(response.data);\n        setPlayers(response.data);\n      }\n    } catch (err) {\n      setPeriodError(err);\n      setPlayersLoaded(false);\n    }\n  };\n\n  const updatePlayer = async player => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${logged.token}`\n        }\n      };\n      const response = await axios.put(\"http://localhost:8080/api/user/\" + logged.id + \"/team/\" + teamId + \"/player/\" + player.id, config); // console.log(response);\n\n      console.log(response.data);\n    } catch (err) {\n      setPeriodError(err);\n      setPlayersLoaded(false);\n    }\n  };\n\n  loadPlayers();\n  return /*#__PURE__*/React.createElement(PlayersListView, Object.assign({}, props, {\n    teamId: teamId,\n    players: players,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 10\n    }\n  }));\n} // TeamListView.defaultProps = {\n//   teams: [\n//     {\n//       name: \"Modena\",\n//     },\n//     {\n//       name: \"Trento\",\n//     },\n//   ],\n// };\n// return (\n//     <div>\n//         <div onClick={() => addToCart(rowIndex)}>\n//             <img src={plus} style={{backgroundColor: '#2a4252'}}/>\n//         </div>\n//         <div id='text-val'> {formatExtraData} </div>\n//         <div onClick={() => removeFromCart(rowIndex)}>\n//             <img src={minus} style={{backgroundColor: '#2a4252'}}/>\n//         </div>\n//     </div>\n// );","map":{"version":3,"sources":["/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/players/playersList.component.js"],"names":["React","useState","useEffect","authHeader","PlayersListView","getPlayersByTeamId","axios","useParams","useLocation","matchPath","player","PlayersList","props","location","console","log","match","pathname","path","exact","strict","teamId","params","localStorage","setItem","JSON","stringify","playersLoaded","setPlayersLoaded","players","setPlayers","error","setError","logged","setPeriodError","setTimeout","loadPlayers","config","headers","Authorization","token","response","get","id","data","err","updatePlayer","put"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport authHeader from \"../../services/auth-header\";\nimport PlayersListView from \"./playersListView.component\";\nimport { getPlayersByTeamId } from \"../../actions/player\";\nimport axios from \"axios\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { matchPath } from \"react-router\";\nimport player from \"../../reducers/player\";\n\nexport function PlayersList(props) {\n  //   const test = useParams();\n  //   console.log(test);\n  const location = useLocation();\n  console.log(location);\n  const match = matchPath(location.pathname, {\n    path: \"/team/:teamId/info\",\n    exact: true,\n    strict: false,\n  });\n  const teamId = match.params.teamId;\n  localStorage.setItem(\"teamId\", JSON.stringify(teamId));\n\n  const [playersLoaded, setPlayersLoaded] = useState(false);\n  const [players, setPlayers] = useState([]);\n  const [error, setError] = useState(null);\n\n  const logged = authHeader();\n  //   console.log(logged);\n\n  const setPeriodError = (error) => {\n    setError(error);\n    setTimeout(() => {\n      setError(null);\n    }, 4000);\n  };\n  const loadPlayers = async () => {\n    try {\n      if (!playersLoaded) {\n        setPlayersLoaded(true);\n        const config = {\n          headers: { Authorization: `Bearer ${logged.token}` },\n        };\n        const response = await axios.get(\n          \"http://localhost:8080/api/user/\" +\n            logged.id +\n            \"/team/\" +\n            teamId +\n            \"/player\",\n          config\n        );\n        // console.log(response);\n        console.log(response.data);\n        setPlayers(response.data);\n      }\n    } catch (err) {\n      setPeriodError(err);\n      setPlayersLoaded(false);\n    }\n  };\n  const updatePlayer = async (player) => {\n    try {\n      const config = {\n        headers: { Authorization: `Bearer ${logged.token}` },\n      };\n\n      const response = await axios.put(\n        \"http://localhost:8080/api/user/\" +\n          logged.id +\n          \"/team/\" +\n          teamId +\n          \"/player/\" +\n          player.id,\n        config\n      );\n      // console.log(response);\n      console.log(response.data);\n    } catch (err) {\n      setPeriodError(err);\n      setPlayersLoaded(false);\n    }\n  };\n  loadPlayers();\n\n  return <PlayersListView {...props} teamId={teamId} players={players} />;\n}\n\n// TeamListView.defaultProps = {\n//   teams: [\n//     {\n//       name: \"Modena\",\n//     },\n//     {\n//       name: \"Trento\",\n//     },\n//   ],\n// };\n\n// return (\n//     <div>\n//         <div onClick={() => addToCart(rowIndex)}>\n//             <img src={plus} style={{backgroundColor: '#2a4252'}}/>\n//         </div>\n//         <div id='text-val'> {formatExtraData} </div>\n//         <div onClick={() => removeFromCart(rowIndex)}>\n//             <img src={minus} style={{backgroundColor: '#2a4252'}}/>\n//         </div>\n//     </div>\n// );\n"]},"metadata":{},"sourceType":"module"}