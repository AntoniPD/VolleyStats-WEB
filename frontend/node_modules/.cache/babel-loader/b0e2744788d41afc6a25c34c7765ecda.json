{"ast":null,"code":"var _jsxFileName = \"/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/profile.component.js\";\nimport { Component } from \"react\"; // import { Redirect } from \"react-router-dom\";\n// import { connect } from \"react-redux\";\n// class Profile extends Component {\n//   render() {\n//     const { user: currentUser } = this.props;\n//     if (!currentUser) {\n//       return <Redirect to=\"/login\" />;\n//     }\n//     return (\n//       <div className=\"container\">\n//         <header className=\"jumbotron\">\n//           <h3>\n//             <strong>{currentUser.name}</strong> Profile\n//           </h3>\n//         </header>\n//         <p>\n//           <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n//           {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n//         </p>\n//         <p>\n//           <strong>Id:</strong> {currentUser.id}\n//         </p>\n//         <p>\n//           <strong>Email:</strong> {currentUser.username}\n//         </p>\n//         <strong>Authorities:</strong>\n//         <ul>\n//           {currentUser.roles &&\n//             currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n//         </ul>\n//       </div>\n//     );\n//   }\n// }\n// function mapStateToProps(state) {\n//   const { user } = state.auth;\n//   return {\n//     user,\n//   };\n// }\n// export default connect(mapStateToProps)(Profile);\n\nimport React, { Fragment } from \"react\";\nimport { Header } from \"semantic-ui-react\";\nimport { MDBBtn, MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.increaseAllyPoints = () => {\n      this.setState(prev => ({\n        allyPoints: prev.allyPoints + 1\n      }), () => {\n        console.log(this.state.allyPoints);\n      });\n    };\n\n    this.increaseOpponentPoints = () => {\n      this.setState(prev => ({\n        oppPoints: prev.oppPoints + 1\n      }), () => {\n        console.log(this.state.oppPoints);\n      });\n    };\n\n    this.increaseAllyGames = () => {\n      this.setState(prev => ({\n        allyGames: prev.allyGames + 1\n      }), () => {\n        console.log(this.state.allyGames);\n      });\n    };\n\n    this.increaseOpponentGames = () => {\n      this.setState(prev => ({\n        oppGames: prev.oppGames + 1\n      }), () => {\n        console.log(this.state.oppGames);\n      });\n    };\n\n    this.decreaseAllyPoints = () => {\n      this.setState(prev => ({\n        allyPoints: prev.allyPoints - 1\n      }), () => {\n        console.log(this.state.allyPoints);\n      });\n    };\n\n    this.decreaseOpponentPoints = () => {\n      this.setState(prev => ({\n        oppPoints: prev.oppPoints - 1\n      }), () => {\n        console.log(this.state.oppPoints);\n      });\n    };\n\n    this.decreaseAllyGames = () => {\n      this.setState(prev => ({\n        allyGames: prev.allyGames - 1\n      }), () => {\n        console.log(this.state.allyGames);\n      });\n    };\n\n    this.decreaseOpponentGames = () => {\n      this.setState(prev => ({\n        oppGames: prev.oppGames - 1\n      }), () => {\n        console.log(this.state.oppGames);\n      });\n    };\n\n    this.state = {\n      allyPoints: 0,\n      oppPoints: 0,\n      allyGames: 0,\n      oppGames: 0,\n      isFinished: false\n    };\n  } // componentDidMount() {\n  //   var that = this;\n  //   document\n  //     .getElementById(\"\")\n  //     .addEventListener(\"click\", that.changeBoardSize, false);\n  //   document\n  //     .getElementById(\"controls-size-med\")\n  //     .addEventListener(\"click\", that.changeBoardSize, false);\n  //   document\n  //     .getElementById(\"controls-size-large\")\n  //     .addEventListener(\"click\", that.changeBoardSize, false);\n  // }\n\n\n  render() {\n    const columns = [{\n      label: \"Name\",\n      field: \"name\",\n      sort: \"asc\"\n    }, {\n      label: \"Spikes\",\n      field: \"spikes\",\n      sort: \"asc\"\n    }, {\n      label: \"Blocks\",\n      field: \"blocks\",\n      sort: \"asc\"\n    }, {\n      label: \"SpikeErrors\",\n      field: \"spikeErrors\",\n      sort: \"asc\"\n    }, {\n      label: \"blockErrors\",\n      field: \"blockErrors\",\n      sort: \"asc\"\n    }, {\n      label: \"ServerErrors\",\n      field: \"serveErrors\",\n      sort: \"asc\"\n    }, {\n      label: \"ReceiveErrors\",\n      field: \"receiveErrors\",\n      sort: \"asc\"\n    }, {\n      label: \"Aces\",\n      field: \"aces\",\n      sort: \"asc\"\n    }, {\n      label: \"Attempts\",\n      field: \"attempts\",\n      sort: \"asc\"\n    }];\n    const rows_rounded_btn = [{\n      name: \"Ivan\",\n      first: [/*#__PURE__*/React.createElement(MDBBtn, {\n        color: \"default\",\n        rounded: true,\n        size: \"sm\",\n        onClick: () => this.increaseAllyPoints(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }\n      }, \"+\"), /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }\n      }, this.state.allyPoints), /*#__PURE__*/React.createElement(MDBBtn, {\n        color: \"default\",\n        rounded: true,\n        size: \"sm\",\n        onClick: () => this.decreaseAllyPoints(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }\n      }, \"-\")],\n      last: \"Otto\",\n      handle: \"@mdo\"\n    }, {\n      name: \"Spas\",\n      first: \"Jacob\",\n      last: /*#__PURE__*/React.createElement(MDBBtn, {\n        color: \"default\",\n        rounded: true,\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }\n      }, \"Button\"),\n      handle: \"@fat\"\n    }, {\n      name: \"sder\",\n      first: \"Larry\",\n      last: \"the Bird\",\n      handle: /*#__PURE__*/React.createElement(MDBBtn, {\n        color: \"default\",\n        rounded: true,\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }\n      }, \"Button\")\n    }];\n    return [[\n    /*#__PURE__*/\n    // [<h2>Nie</h2>, <h1>2</h1>],\n    React.createElement(Header, {\n      as: \"h1\",\n      floated: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }\n    }, \"Nie 3 : 2 Te\"), /*#__PURE__*/React.createElement(Header, {\n      as: \"h1\",\n      floated: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }\n    }, \"Overall Statistics\")], /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 7\n      }\n    }, \"Players Statistics\"), /*#__PURE__*/React.createElement(MDBTable, {\n      btn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MDBTableHead, {\n      columns: columns,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(MDBTableBody, {\n      rows: rows_rounded_btn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 7\n      }\n    }, \"Overall Statistics\"), /*#__PURE__*/React.createElement(MDBTable, {\n      btn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MDBTableHead, {\n      columns: columns,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(MDBTableBody, {\n      rows: rows_rounded_btn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }\n    }))];\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/profile.component.js"],"names":["Component","React","Fragment","Header","MDBBtn","MDBTable","MDBTableBody","MDBTableHead","Profile","constructor","props","increaseAllyPoints","setState","prev","allyPoints","console","log","state","increaseOpponentPoints","oppPoints","increaseAllyGames","allyGames","increaseOpponentGames","oppGames","decreaseAllyPoints","decreaseOpponentPoints","decreaseAllyGames","decreaseOpponentGames","isFinished","render","columns","label","field","sort","rows_rounded_btn","name","first","last","handle"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\n// import { Redirect } from \"react-router-dom\";\n// import { connect } from \"react-redux\";\n\n// class Profile extends Component {\n//   render() {\n//     const { user: currentUser } = this.props;\n\n//     if (!currentUser) {\n//       return <Redirect to=\"/login\" />;\n//     }\n\n//     return (\n//       <div className=\"container\">\n//         <header className=\"jumbotron\">\n//           <h3>\n//             <strong>{currentUser.name}</strong> Profile\n//           </h3>\n//         </header>\n//         <p>\n//           <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n//           {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n//         </p>\n//         <p>\n//           <strong>Id:</strong> {currentUser.id}\n//         </p>\n//         <p>\n//           <strong>Email:</strong> {currentUser.username}\n//         </p>\n//         <strong>Authorities:</strong>\n//         <ul>\n//           {currentUser.roles &&\n//             currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n//         </ul>\n//       </div>\n//     );\n//   }\n// }\n\n// function mapStateToProps(state) {\n//   const { user } = state.auth;\n//   return {\n//     user,\n//   };\n// }\n\n// export default connect(mapStateToProps)(Profile);\n\nimport React, { Fragment } from \"react\";\nimport { Header } from \"semantic-ui-react\";\nimport { MDBBtn, MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      allyPoints: 0,\n      oppPoints: 0,\n      allyGames: 0,\n      oppGames: 0,\n      isFinished: false,\n    };\n  }\n\n  // componentDidMount() {\n  //   var that = this;\n  //   document\n  //     .getElementById(\"\")\n  //     .addEventListener(\"click\", that.changeBoardSize, false);\n  //   document\n  //     .getElementById(\"controls-size-med\")\n  //     .addEventListener(\"click\", that.changeBoardSize, false);\n  //   document\n  //     .getElementById(\"controls-size-large\")\n  //     .addEventListener(\"click\", that.changeBoardSize, false);\n  // }\n\n  increaseAllyPoints = () => {\n    this.setState(\n      (prev) => ({\n        allyPoints: prev.allyPoints + 1,\n      }),\n      () => {\n        console.log(this.state.allyPoints);\n      }\n    );\n  };\n  increaseOpponentPoints = () => {\n    this.setState(\n      (prev) => ({\n        oppPoints: prev.oppPoints + 1,\n      }),\n      () => {\n        console.log(this.state.oppPoints);\n      }\n    );\n  };\n  increaseAllyGames = () => {\n    this.setState(\n      (prev) => ({\n        allyGames: prev.allyGames + 1,\n      }),\n      () => {\n        console.log(this.state.allyGames);\n      }\n    );\n  };\n  increaseOpponentGames = () => {\n    this.setState(\n      (prev) => ({\n        oppGames: prev.oppGames + 1,\n      }),\n      () => {\n        console.log(this.state.oppGames);\n      }\n    );\n  };\n  decreaseAllyPoints = () => {\n    this.setState(\n      (prev) => ({\n        allyPoints: prev.allyPoints - 1,\n      }),\n      () => {\n        console.log(this.state.allyPoints);\n      }\n    );\n  };\n  decreaseOpponentPoints = () => {\n    this.setState(\n      (prev) => ({\n        oppPoints: prev.oppPoints - 1,\n      }),\n      () => {\n        console.log(this.state.oppPoints);\n      }\n    );\n  };\n  decreaseAllyGames = () => {\n    this.setState(\n      (prev) => ({\n        allyGames: prev.allyGames - 1,\n      }),\n      () => {\n        console.log(this.state.allyGames);\n      }\n    );\n  };\n  decreaseOpponentGames = () => {\n    this.setState(\n      (prev) => ({\n        oppGames: prev.oppGames - 1,\n      }),\n      () => {\n        console.log(this.state.oppGames);\n      }\n    );\n  };\n\n  render() {\n    const columns = [\n      {\n        label: \"Name\",\n        field: \"name\",\n        sort: \"asc\",\n      },\n      {\n        label: \"Spikes\",\n        field: \"spikes\",\n        sort: \"asc\",\n      },\n      {\n        label: \"Blocks\",\n        field: \"blocks\",\n        sort: \"asc\",\n      },\n      {\n        label: \"SpikeErrors\",\n        field: \"spikeErrors\",\n        sort: \"asc\",\n      },\n      {\n        label: \"blockErrors\",\n        field: \"blockErrors\",\n        sort: \"asc\",\n      },\n      {\n        label: \"ServerErrors\",\n        field: \"serveErrors\",\n        sort: \"asc\",\n      },\n      {\n        label: \"ReceiveErrors\",\n        field: \"receiveErrors\",\n        sort: \"asc\",\n      },\n      {\n        label: \"Aces\",\n        field: \"aces\",\n        sort: \"asc\",\n      },\n      {\n        label: \"Attempts\",\n        field: \"attempts\",\n        sort: \"asc\",\n      },\n    ];\n\n    const rows_rounded_btn = [\n      {\n        name: \"Ivan\",\n        first: [\n          <MDBBtn\n            color=\"default\"\n            rounded\n            size=\"sm\"\n            onClick={() => this.increaseAllyPoints()}\n          >\n            +\n          </MDBBtn>,\n          <Fragment>{this.state.allyPoints}</Fragment>,\n          <MDBBtn\n            color=\"default\"\n            rounded\n            size=\"sm\"\n            onClick={() => this.decreaseAllyPoints()}\n          >\n            -\n          </MDBBtn>,\n        ],\n        last: \"Otto\",\n        handle: \"@mdo\",\n      },\n      {\n        name: \"Spas\",\n        first: \"Jacob\",\n        last: (\n          <MDBBtn color=\"default\" rounded size=\"sm\">\n            Button\n          </MDBBtn>\n        ),\n        handle: \"@fat\",\n      },\n      {\n        name: \"sder\",\n        first: \"Larry\",\n        last: \"the Bird\",\n        handle: (\n          <MDBBtn color=\"default\" rounded size=\"sm\">\n            Button\n          </MDBBtn>\n        ),\n      },\n    ];\n    return [\n      [\n        // [<h2>Nie</h2>, <h1>2</h1>],\n        <Header as=\"h1\" floated=\"left\">\n          Nie 3 : 2 Te\n        </Header>,\n        <Header as=\"h1\" floated=\"right\">\n          Overall Statistics\n        </Header>,\n      ],\n      <Fragment>Players Statistics</Fragment>,\n      <MDBTable btn>\n        <MDBTableHead columns={columns} />\n        <MDBTableBody rows={rows_rounded_btn} />\n      </MDBTable>,\n      <Fragment>Overall Statistics</Fragment>,\n      <MDBTable btn>\n        <MDBTableHead columns={columns} />\n        <MDBTableBody rows={rows_rounded_btn} />\n      </MDBTable>,\n    ];\n  }\n}\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}