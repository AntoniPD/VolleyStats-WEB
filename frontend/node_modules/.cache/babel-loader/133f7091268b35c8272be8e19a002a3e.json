{"ast":null,"code":"var _jsxFileName = \"/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/teams/teamList.component.js\";\nimport React, { useState, useEffect } from \"react\";\nimport authHeader from \"../../services/auth-header\";\nimport TeamListView from \"./teamListView.component\";\nimport { getTeamsById } from \"../../actions/team\";\nimport axios from \"axios\";\nexport function TeamsList(props) {\n  const [teamsLoaded, setTeamsLoaded] = useState(false);\n  const [teams, setTeams] = useState([]);\n  const [error, setError] = useState(null);\n  const logged = authHeader();\n  console.log(logged);\n\n  const setPeriodError = error => {\n    setError(error);\n    setTimeout(() => {\n      setError(null);\n    }, 4000);\n  };\n\n  useEffect(() => {\n    const loadTeams = async () => {\n      try {\n        if (!teamsLoaded) {\n          setTeamsLoaded(true);\n          const config = {\n            headers: {\n              Authorization: `Bearer ${logged.token}`\n            }\n          };\n          const response = this.props.dispatch(getTeamsById(logged));\n          console.log(response);\n          console.log(response.data);\n          setTeams(response.data);\n        }\n      } catch (err) {\n        setPeriodError(err);\n        setTeamsLoaded(false);\n      }\n    };\n  });\n  return /*#__PURE__*/React.createElement(TeamListView, Object.assign({}, props, {\n    teams: teams,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }\n  }));\n} // TeamListView.defaultProps = {\n//   teams: [\n//     {\n//       name: \"Modena\",\n//     },\n//     {\n//       name: \"Trento\",\n//     },\n//   ],\n// };","map":{"version":3,"sources":["/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/teams/teamList.component.js"],"names":["React","useState","useEffect","authHeader","TeamListView","getTeamsById","axios","TeamsList","props","teamsLoaded","setTeamsLoaded","teams","setTeams","error","setError","logged","console","log","setPeriodError","setTimeout","loadTeams","config","headers","Authorization","token","response","dispatch","data","err"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAC/B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMc,MAAM,GAAGZ,UAAU,EAAzB;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAEA,QAAMG,cAAc,GAAIL,KAAD,IAAW;AAChCC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAM,IAAAA,UAAU,CAAC,MAAM;AACfL,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GALD;;AAMAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,YAAI,CAACX,WAAL,EAAkB;AAChBC,UAAAA,cAAc,CAAC,IAAD,CAAd;AACA,gBAAMW,MAAM,GAAG;AACbC,YAAAA,OAAO,EAAE;AAAEC,cAAAA,aAAa,EAAG,UAASR,MAAM,CAACS,KAAM;AAAxC;AADI,WAAf;AAGA,gBAAMC,QAAQ,GAAG,KAAKjB,KAAL,CAAWkB,QAAX,CAAoBrB,YAAY,CAACU,MAAD,CAAhC,CAAjB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ;AACAT,UAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAQ,CAACE,IAArB;AACAf,UAAAA,QAAQ,CAACa,QAAQ,CAACE,IAAV,CAAR;AACD;AACF,OAXD,CAWE,OAAOC,GAAP,EAAY;AACZV,QAAAA,cAAc,CAACU,GAAD,CAAd;AACAlB,QAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,KAhBD;AAiBD,GAlBQ,CAAT;AAoBA,sBAAO,oBAAC,YAAD,oBAAkBF,KAAlB;AAAyB,IAAA,KAAK,EAAEG,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport authHeader from \"../../services/auth-header\";\nimport TeamListView from \"./teamListView.component\";\nimport { getTeamsById } from \"../../actions/team\";\nimport axios from \"axios\";\n\nexport function TeamsList(props) {\n  const [teamsLoaded, setTeamsLoaded] = useState(false);\n  const [teams, setTeams] = useState([]);\n  const [error, setError] = useState(null);\n\n  const logged = authHeader();\n  console.log(logged);\n\n  const setPeriodError = (error) => {\n    setError(error);\n    setTimeout(() => {\n      setError(null);\n    }, 4000);\n  };\n  useEffect(() => {\n    const loadTeams = async () => {\n      try {\n        if (!teamsLoaded) {\n          setTeamsLoaded(true);\n          const config = {\n            headers: { Authorization: `Bearer ${logged.token}` },\n          };\n          const response = this.props.dispatch(getTeamsById(logged));\n          console.log(response);\n          console.log(response.data);\n          setTeams(response.data);\n        }\n      } catch (err) {\n        setPeriodError(err);\n        setTeamsLoaded(false);\n      }\n    };\n  });\n\n  return <TeamListView {...props} teams={teams} />;\n}\n\n// TeamListView.defaultProps = {\n//   teams: [\n//     {\n//       name: \"Modena\",\n//     },\n//     {\n//       name: \"Trento\",\n//     },\n//   ],\n// };\n"]},"metadata":{},"sourceType":"module"}