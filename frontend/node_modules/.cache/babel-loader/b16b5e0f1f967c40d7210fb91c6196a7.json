{"ast":null,"code":"var _jsxFileName = \"/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/teams/teamList.component.js\";\nimport React, { useState } from \"react\";\nimport authHeader from \"../../services/auth-header\";\nimport TeamListView from \"./teamListView.component\";\nimport axios from \"axios\";\nexport function TeamsList(props) {\n  const [teamsLoaded, setTeamsLoaded] = useState(false);\n  const [teams, setTeams] = useState([]);\n  const [error, setError] = useState(null);\n  const logged = authHeader();\n  console.log(logged);\n\n  const loadTeams = async () => {\n    try {\n      if (!teamsLoaded) {\n        setTeamsLoaded(true);\n        const config = {\n          headers: {\n            Authorization: `Bearer ${logged.token}`\n          }\n        };\n        const response = await axios(`/api/team/${logged.id}`, config);\n        console.log(response.data);\n        setTeams(response.data);\n      }\n    } catch (err) {\n      setPeriodError(err);\n      setTeamsLoaded(false);\n    }\n  };\n\n  loadTeams();\n\n  const setPeriodError = error => {\n    setError(error);\n    setTimeout(() => {\n      setError(null);\n    }, 4000);\n  };\n\n  return /*#__PURE__*/React.createElement(TeamListView, Object.assign({}, props, {\n    teams: teams,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }\n  }));\n} // TeamListView.defaultProps = {\n//   teams: [\n//     {\n//       name: \"Modena\",\n//     },\n//     {\n//       name: \"Trento\",\n//     },\n//   ],\n// };","map":{"version":3,"sources":["/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/teams/teamList.component.js"],"names":["React","useState","authHeader","TeamListView","axios","TeamsList","props","teamsLoaded","setTeamsLoaded","teams","setTeams","error","setError","logged","console","log","loadTeams","config","headers","Authorization","token","response","id","data","err","setPeriodError","setTimeout"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAC/B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMY,MAAM,GAAGX,UAAU,EAAzB;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAEA,QAAMG,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,UAAI,CAACT,WAAL,EAAkB;AAChBC,QAAAA,cAAc,CAAC,IAAD,CAAd;AACA,cAAMS,MAAM,GAAG;AAAEC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,aAAa,EAAG,UAASN,MAAM,CAACO,KAAM;AAAxC;AAAX,SAAf;AACA,cAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAAE,aAAYS,MAAM,CAACS,EAAG,EAAxB,EAA2BL,MAA3B,CAA5B;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYM,QAAQ,CAACE,IAArB;AACAb,QAAAA,QAAQ,CAACW,QAAQ,CAACE,IAAV,CAAR;AACD;AACF,KARD,CAQE,OAAOC,GAAP,EAAY;AACZC,MAAAA,cAAc,CAACD,GAAD,CAAd;AACAhB,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,GAbD;;AAeAQ,EAAAA,SAAS;;AAET,QAAMS,cAAc,GAAId,KAAD,IAAW;AAChCC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAe,IAAAA,UAAU,CAAC,MAAM;AACfd,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GALD;;AAOA,sBAAO,oBAAC,YAAD,oBAAkBN,KAAlB;AAAyB,IAAA,KAAK,EAAEG,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from \"react\";\nimport authHeader from \"../../services/auth-header\";\nimport TeamListView from \"./teamListView.component\";\nimport axios from \"axios\";\n\nexport function TeamsList(props) {\n  const [teamsLoaded, setTeamsLoaded] = useState(false);\n  const [teams, setTeams] = useState([]);\n  const [error, setError] = useState(null);\n\n  const logged = authHeader();\n  console.log(logged);\n\n  const loadTeams = async () => {\n    try {\n      if (!teamsLoaded) {\n        setTeamsLoaded(true);\n        const config = { headers: { Authorization: `Bearer ${logged.token}` } };\n        const response = await axios(`/api/team/${logged.id}`, config);\n        console.log(response.data);\n        setTeams(response.data);\n      }\n    } catch (err) {\n      setPeriodError(err);\n      setTeamsLoaded(false);\n    }\n  };\n\n  loadTeams();\n\n  const setPeriodError = (error) => {\n    setError(error);\n    setTimeout(() => {\n      setError(null);\n    }, 4000);\n  };\n\n  return <TeamListView {...props} teams={teams} />;\n}\n\n// TeamListView.defaultProps = {\n//   teams: [\n//     {\n//       name: \"Modena\",\n//     },\n//     {\n//       name: \"Trento\",\n//     },\n//   ],\n// };\n"]},"metadata":{},"sourceType":"module"}