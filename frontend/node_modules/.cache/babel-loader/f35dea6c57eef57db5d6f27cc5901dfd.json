{"ast":null,"code":"var _jsxFileName = \"/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/register.component.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { Button, Form as FormSemantic, Message, Grid, Segment, Checkbox } from \"semantic-ui-react\";\nimport { isEmail } from \"validator\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../actions/auth\";\nimport { clearMessage } from \"../actions/message\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, \"This field is required!\");\n  }\n};\n\nconst username = value => {\n  if (!isEmail(value)) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, \"This is not a valid username.\");\n  }\n};\n\nconst vname = value => {\n  if (value.length < 3 || value.length > 20) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, \"The name must be between 3 and 20 characters.\");\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 8 || value.length > 40) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, \"The password must be between 8 and 40 characters.\");\n  }\n};\n\nconst MyRolesInput = ({\n  field,\n  form,\n  ...props\n}) => {\n  console.log(field, form, props);\n  return /*#__PURE__*/React.createElement(Segment, {\n    inverted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    compact: true,\n    inverted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    inverted: true,\n    id: \"role-Admin\",\n    checked: form.values.roles.includes(roles.ADMIN),\n    label: \"Admin\",\n    onChange: event => {\n      if (!event.target.checked) {\n        form.setFieldValue(\"roles\", form.values.roles.filter(r => r !== roles.ADMIN));\n      } else {\n        form.setFieldValue(\"roles\", [roles.ADMIN].concat(form.values.roles));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Segment, {\n    compact: true,\n    inverted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    inverted: true,\n    id: \"role-Teacher\",\n    checked: form.values.roles.includes(roles.TEACHER),\n    label: \"Teacher\",\n    onChange: event => {\n      if (!event.target.checked) {\n        form.setFieldValue(\"roles\", form.values.roles.filter(r => r !== roles.TEACHER));\n      } else {\n        form.setFieldValue(\"roles\", [roles.TEACHER].concat(form.values.roles));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Segment, {\n    compact: true,\n    inverted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    inverted: true,\n    id: \"role-Student\",\n    checked: form.values.roles.includes(roles.STUDENT),\n    label: \"Student\",\n    onChange: event => {\n      if (!event.target.checked) {\n        form.setFieldValue(\"roles\", form.values.roles.filter(r => r !== roles.STUDENT));\n      } else {\n        form.setFieldValue(\"roles\", [roles.STUDENT].concat(form.values.roles));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })));\n};\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.state = {\n      name: \"\",\n      username: \"\",\n      password: \"\",\n      successful: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(clearMessage);\n  }\n\n  onChangeName(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n    this.setState({\n      successful: false\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      this.props.dispatch(register(this.state.name, this.state.username, this.state.password)).then(() => {\n        this.setState({\n          successful: true\n        });\n      }).catch(() => {\n        this.setState({\n          successful: false\n        });\n      });\n    }\n  }\n\n  render() {\n    const {\n      message\n    } = this.props;\n    console.log(message);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n      alt: \"profile-img\",\n      className: \"profile-img-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleRegister,\n      ref: c => {\n        this.form = c;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }\n    }, !this.state.successful && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 19\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.onChangeName,\n      validations: [required, vname],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 19\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      className: \"form-control\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.onChangeUsername,\n      validations: [required, username],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 19\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.onChangePassword,\n      validations: [required, vpassword],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 19\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(MyRolesInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 19\n      }\n    }))), message && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.successful ? \"alert alert-success\" : \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }, message)), /*#__PURE__*/React.createElement(CheckButton, {\n      style: {\n        display: \"none\"\n      },\n      ref: c => {\n        this.checkBtn = c;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const {\n    message\n  } = state.message;\n  return {\n    message\n  };\n}\n\nexport default connect(mapStateToProps)(Register);","map":{"version":3,"sources":["/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/register.component.js"],"names":["React","Component","Form","Input","CheckButton","Button","FormSemantic","Message","Grid","Segment","Checkbox","isEmail","connect","register","clearMessage","required","value","username","vname","length","vpassword","MyRolesInput","field","form","props","console","log","values","roles","includes","ADMIN","event","target","checked","setFieldValue","filter","r","concat","TEACHER","STUDENT","Register","constructor","handleRegister","bind","onChangeName","onChangeUsername","onChangePassword","state","name","password","successful","componentDidMount","dispatch","e","setState","preventDefault","validateAll","checkBtn","context","_errors","then","catch","render","message","c","display","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport {\n  Button,\n  Form as FormSemantic,\n  Message,\n  Grid,\n  Segment,\n  Checkbox,\n} from \"semantic-ui-react\";\n\nimport { isEmail } from \"validator\";\n\nimport { connect } from \"react-redux\";\nimport { register } from \"../actions/auth\";\nimport { clearMessage } from \"../actions/message\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst username = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid username.\n      </div>\n    );\n  }\n};\n\nconst vname = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The name must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 8 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 8 and 40 characters.\n      </div>\n    );\n  }\n};\n\nconst MyRolesInput = ({ field, form, ...props }) => {\n  console.log(field, form, props);\n  return (\n    <Segment inverted>\n      <Segment compact inverted>\n        <Checkbox\n          inverted\n          id=\"role-Admin\"\n          checked={form.values.roles.includes(roles.ADMIN)}\n          label=\"Admin\"\n          onChange={(event) => {\n            if (!event.target.checked) {\n              form.setFieldValue(\n                \"roles\",\n                form.values.roles.filter((r) => r !== roles.ADMIN)\n              );\n            } else {\n              form.setFieldValue(\n                \"roles\",\n                [roles.ADMIN].concat(form.values.roles)\n              );\n            }\n          }}\n        />\n      </Segment>\n      <Segment compact inverted>\n        <Checkbox\n          inverted\n          id=\"role-Teacher\"\n          checked={form.values.roles.includes(roles.TEACHER)}\n          label=\"Teacher\"\n          onChange={(event) => {\n            if (!event.target.checked) {\n              form.setFieldValue(\n                \"roles\",\n                form.values.roles.filter((r) => r !== roles.TEACHER)\n              );\n            } else {\n              form.setFieldValue(\n                \"roles\",\n                [roles.TEACHER].concat(form.values.roles)\n              );\n            }\n          }}\n        />\n      </Segment>\n      <Segment compact inverted>\n        <Checkbox\n          inverted\n          id=\"role-Student\"\n          checked={form.values.roles.includes(roles.STUDENT)}\n          label=\"Student\"\n          onChange={(event) => {\n            if (!event.target.checked) {\n              form.setFieldValue(\n                \"roles\",\n                form.values.roles.filter((r) => r !== roles.STUDENT)\n              );\n            } else {\n              form.setFieldValue(\n                \"roles\",\n                [roles.STUDENT].concat(form.values.roles)\n              );\n            }\n          }}\n        />\n      </Segment>\n    </Segment>\n  );\n};\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      name: \"\",\n      username: \"\",\n      password: \"\",\n      successful: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(clearMessage);\n  }\n\n  onChangeName(e) {\n    this.setState({\n      name: e.target.value,\n    });\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      successful: false,\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      this.props\n        .dispatch(\n          register(this.state.name, this.state.username, this.state.password)\n        )\n        .then(() => {\n          this.setState({\n            successful: true,\n          });\n        })\n        .catch(() => {\n          this.setState({\n            successful: false,\n          });\n        });\n    }\n  }\n\n  render() {\n    const { message } = this.props;\n    console.log(message);\n\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={(c) => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"name\"\n                    value={this.state.name}\n                    onChange={this.onChangeName}\n                    validations={[required, vname]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Input\n                    type=\"email\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required, username]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                  <MyRolesInput />\n                </div>\n              </div>\n            )}\n\n            {message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={(c) => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { message } = state.message;\n  return {\n    message,\n  };\n}\n\nexport default connect(mapStateToProps)(Register);\n"]},"metadata":{},"sourceType":"module"}