{"ast":null,"code":"var _jsxFileName = \"/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/match/match.component.js\";\nimport { Component } from \"react\";\nimport React, { Fragment } from \"react\";\nimport { Header } from \"semantic-ui-react\";\nimport { MDBBtn, MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\nimport axios from \"axios\";\nimport authHeader from \"../../services/auth-header\";\nimport matchService from \"../../services/match.service\";\n\nclass Match extends Component {\n  constructor(props) {\n    super(props);\n\n    this.increasePlayerStat = (index, stat) => {\n      // updatePlayers = players[index][stat]++;\n      let newArray = [...this.state.players];\n      newArray[index][stat] = this.state.players[index][stat] + 1;\n      console.log(newArray);\n\n      switch (stat) {\n        case \"spikeErrors\":\n          this.setState(prev => ({\n            allSpikeErrors: prev.allSpikeErrors + 1\n          }));\n          this.increaseOpponentPoints();\n          break;\n\n        case \"blockErrors\":\n          this.setState(prev => ({\n            allBlockErrors: prev.allBlockErrors + 1\n          }));\n          this.increaseOpponentPoints();\n          break;\n\n        case \"serveErrors\":\n          this.setState(prev => ({\n            allServeErrors: prev.allServeErrors + 1\n          }));\n          this.increaseOpponentPoints();\n          break;\n\n        case \"receiveErrors\":\n          this.setState(prev => ({\n            allReceiveErrors: prev.allReceiveErrors + 1\n          }));\n          this.increaseOpponentPoints();\n          break;\n\n        case \"spikes\":\n          this.setState(prev => ({\n            allSpikes: prev.allSpikes + 1\n          }));\n          this.increaseAllyPoints();\n          break;\n\n        case \"blocks\":\n          this.setState(prev => ({\n            allBlocks: prev.allBlocks + 1\n          }));\n          this.increaseAllyPoints();\n          break;\n\n        case \"aces\":\n          this.increaseAllyPoints();\n          break;\n      }\n\n      this.setState(() => ({\n        players: newArray\n      }));\n    };\n\n    this.decreasePlayerStat = (index, stat) => {\n      // updatePlayers = players[index][stat]++;\n      let newArray = [...this.state.players];\n      newArray[index][stat] = this.state.players[index][stat] - 1;\n\n      if (newArray[index][stat] < 0) {\n        newArray[index][stat] = 0;\n      }\n\n      switch (stat) {\n        case \"spikeErrors\":\n        case \"blockErrors\":\n        case \"serveErrors\":\n        case \"receiveErrors\":\n          this.decreaseOpponentPoints();\n          break;\n\n        case \"spikes\":\n        case \"blocks\":\n        case \"aces\":\n          this.decreaseAllyPoints();\n          break;\n      }\n\n      console.log(newArray);\n      this.setState(() => ({\n        players: newArray\n      }));\n    };\n\n    this.increaseAllyPoints = () => {\n      this.setState(prev => ({\n        allyPoints: prev.allyPoints + 1\n      }), () => {\n        console.log(this.state.allyPoints);\n      });\n\n      if (this.state.oppGames == 2 && this.state.allyGames == 2 && this.state.allyPoints > 14 && Math.abs(this.state.allyPoints - this.state.oppPoints) > 1) {\n        this.resetPointsOnAllyGame();\n      }\n\n      if (this.state.allyPoints > 23 && Math.abs(this.state.allyPoints - this.state.oppPoints) > 1) {\n        this.resetPointsOnAllyGame();\n\n        if (this.state.allyGames == 3) {\n          this.endMatch();\n        }\n      }\n    };\n\n    this.resetPointsOnOpponentGame = () => {\n      // TODO: update DB\n      const match = {\n        _id: this.state.id,\n        opponent: this.state.opponent,\n        allyGames: this.state.allyGames,\n        opponentGames: this.state.oppGames + 1,\n        allyPoints: this.state.allyPoints,\n        opponentPoints: this.state.oppPoints,\n        // attempts: this.state.attemps,\n        players: this.state.players\n      };\n      matchService.updateMatch(match, this.state.token);\n      this.setState(prev => ({\n        oppGames: prev.oppGames + 1,\n        oppPoints: 0,\n        allyPoints: 0\n      }));\n    };\n\n    this.increaseOpponentPoints = () => {\n      this.setState(prev => ({\n        oppPoints: prev.oppPoints + 1,\n        errors: prev.errors++\n      }), () => {\n        console.log(this.state.oppPoints);\n      });\n\n      if (this.state.oppGames == 2 && this.state.allyGames == 2 && this.state.oppPoints > 14 && Math.abs(this.state.oppPoints - this.state.allyPoints) > 1) {\n        this.resetPointsOnOpponentGame();\n      }\n\n      if (this.state.oppPoints > 23 && Math.abs(this.state.oppPoints - this.state.allyPoints) > 1) {\n        this.resetPointsOnOpponentGame();\n\n        if (this.state.oppGames == 3) {\n          this.endMatch();\n        }\n      }\n    };\n\n    this.endMatch = () => {\n      this.setState({\n        isFinished: true\n      });\n    };\n\n    this.resetPointsOnAllyGame = () => {\n      // TODO: update DB\n      const match = {\n        _id: this.state.id,\n        opponent: this.state.opponent,\n        allyGames: this.state.allyGames + 1,\n        opponentGames: this.state.oppGames,\n        allyPoints: this.state.allyPoints,\n        opponentPoints: this.state.oppPoints,\n        // attempts: this.state.attemps,\n        // errorPoints: this.state.errorPoints,\n        players: this.state.players\n      };\n      matchService.updateMatch(match, this.state.token);\n      this.setState(prev => ({\n        allyGames: prev.allyGames + 1,\n        oppPoints: 0,\n        allyPoints: 0\n      }));\n    };\n\n    this.increaseAllyGames = () => {\n      this.setState(prev => ({\n        allyGames: prev.allyGames + 1\n      }), () => {\n        console.log(this.state.allyGames);\n      });\n    };\n\n    this.increaseOpponentGames = () => {\n      this.setState(prev => ({\n        oppGames: prev.oppGames + 1\n      }), () => {\n        console.log(this.state.oppGames);\n      });\n    };\n\n    this.decreaseAllyPoints = () => {\n      if (this.state.allyPoints - 1 < 0) {\n        return;\n      }\n\n      this.setState(prev => ({\n        allyPoints: prev.allyPoints - 1\n      }), () => {\n        console.log(this.state.allyPoints);\n      });\n    };\n\n    this.decreaseOpponentPoints = () => {\n      if (this.state.oppPoints - 1 < 0) {\n        return;\n      }\n\n      this.setState(prev => ({\n        oppPoints: prev.oppPoints - 1\n      }), () => {\n        console.log(this.state.oppPoints);\n      });\n    };\n\n    this.decreaseAllyGames = () => {\n      if (this.state.allyGames - 1 < 0) {\n        return;\n      }\n\n      this.setState(prev => ({\n        allyGames: prev.allyGames - 1\n      }), () => {\n        console.log(this.state.allyGames);\n      });\n    };\n\n    this.decreaseOpponentGames = () => {\n      if (this.state.oppGames - 1 < 0) {\n        return;\n      }\n\n      this.setState(prev => ({\n        oppGames: prev.oppGames - 1\n      }), () => {\n        console.log(this.state.oppGames);\n      });\n    };\n\n    this.state = {\n      id: \"\",\n      allyPoints: 0,\n      oppPoints: 0,\n      allyGames: 0,\n      oppGames: 0,\n      players: [],\n      attempts: 0,\n      errors: 0,\n      points: 0,\n      opponent: \"\",\n      allSpikes: 0,\n      allBlocks: 0,\n      allSpikeErrors: 0,\n      allBlockErrors: 0,\n      allServeErrors: 0,\n      allReceiveErrors: 0,\n      allAces: 0,\n      allAttempts: 0,\n      isFinished: false,\n      token: authHeader()\n    };\n  }\n\n  async componentDidMount() {\n    const logged = authHeader();\n\n    try {\n      // if (!playersLoaded) {\n      // setPlayersLoaded(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${logged.token}`\n        }\n      };\n      const matchId = JSON.parse(localStorage.getItem(\"matchId\"));\n      const response = await axios.get(\"http://localhost:8080/api/match/\" + matchId, config); // console.log(response);\n\n      this.setState({\n        players: response.data.players,\n        opponent: response.data.opponent,\n        id: response.data._id,\n        allyGames: response.data.allyGames,\n        oppGames: response.data.opponentGames,\n        allyPoints: 0,\n        oppPoints: 0\n      });\n      console.log(response.data); // setPlayers(response.data);\n      // }\n    } catch (err) {// setError(err);\n      // setPlayersLoaded(false);\n    }\n  }\n\n  render() {\n    const columns = [{\n      label: \"Name\",\n      field: \"name\",\n      sort: \"asc\"\n    }, {\n      label: \"Spikes\",\n      field: \"spikes\",\n      sort: \"asc\"\n    }, {\n      label: \"Blocks\",\n      field: \"blocks\",\n      sort: \"asc\"\n    }, {\n      label: \"SpikeErrors\",\n      field: \"spikeErrors\",\n      sort: \"asc\"\n    }, {\n      label: \"blockErrors\",\n      field: \"blockErrors\",\n      sort: \"asc\"\n    }, {\n      label: \"ServerErrors\",\n      field: \"serveErrors\",\n      sort: \"asc\"\n    }, {\n      label: \"ReceiveErrors\",\n      field: \"receiveErrors\",\n      sort: \"asc\"\n    }, {\n      label: \"Aces\",\n      field: \"aces\",\n      sort: \"asc\"\n    }, {\n      label: \"Attempts\",\n      field: \"attempts\",\n      sort: \"asc\"\n    }];\n    let rows_rounded_btn = [];\n\n    if (this.state.players.length > 0) {\n      for (let i = 0; i < this.state.players.length; i++) {\n        rows_rounded_btn.push({\n          name: this.state.players[i][\"name\"],\n          spikes: [/*#__PURE__*/React.createElement(MDBBtn, {\n            color: \"default\",\n            rounded: true,\n            size: \"sm\",\n            onClick: () => this.increasePlayerStat(i, \"spikes\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 13\n            }\n          }, \"+\"), /*#__PURE__*/React.createElement(Fragment, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 13\n            }\n          }, this.state.players[i].spikes), /*#__PURE__*/React.createElement(MDBBtn, {\n            color: \"default\",\n            rounded: true,\n            size: \"sm\",\n            onClick: () => this.decreasePlayerStat(i, \"spikes\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 13\n            }\n          }, \"-\")],\n          blocks: [/*#__PURE__*/React.createElement(MDBBtn, {\n            color: \"default\",\n            rounded: true,\n            size: \"sm\",\n            onClick: () => this.increasePlayerStat(i, \"blocks\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 13\n            }\n          }, \"+\"), /*#__PURE__*/React.createElement(Fragment, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 13\n            }\n          }, this.state.players[i].blocks), /*#__PURE__*/React.createElement(MDBBtn, {\n            color: \"default\",\n            rounded: true,\n            size: \"sm\",\n            onClick: () => this.decreasePlayerStat(i, \"blocks\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 13\n            }\n          }, \"-\")],\n          spikeErrors: [/*#__PURE__*/React.createElement(MDBBtn, {\n            color: \"default\",\n            rounded: true,\n            size: \"sm\",\n            onClick: () => this.increasePlayerStat(i, \"spikeErrors\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 13\n            }\n          }, \"+\"), /*#__PURE__*/React.createElement(Fragment, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 13\n            }\n          }, this.state.players[i].spikeErrors), /*#__PURE__*/React.createElement(MDBBtn, {\n            color: \"default\",\n            rounded: true,\n            size: \"sm\",\n            onClick: () => this.decreasePlayerStat(i, \"spikeErrors\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 13\n            }\n          }, \"-\")],\n          blockErrors: [/*#__PURE__*/React.createElement(MDBBtn, {\n            color: \"default\",\n            rounded: true,\n            size: \"sm\",\n            onClick: () => this.increasePlayerStat(i, \"blockErrors\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 13\n            }\n          }, \"+\"), /*#__PURE__*/React.createElement(Fragment, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 13\n            }\n          }, this.state.players[i].blockErrors), /*#__PURE__*/React.createElement(MDBBtn, {\n            color: \"default\",\n            rounded: true,\n            size: \"sm\",\n            onClick: () => this.decreasePlayerStat(i, \"blockErrors\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 13\n            }\n          }, \"-\")],\n          serveErrors: [/*#__PURE__*/React.createElement(MDBBtn, {\n            color: \"default\",\n            rounded: true,\n            size: \"sm\",\n            onClick: () => this.increasePlayerStat(i, \"serveErrors\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 13\n            }\n          }, \"+\"), /*#__PURE__*/React.createElement(Fragment, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 13\n            }\n          }, this.state.players[i].serveErrors), /*#__PURE__*/React.createElement(MDBBtn, {\n            color: \"default\",\n            rounded: true,\n            size: \"sm\",\n            onClick: () => this.decreasePlayerStat(i, \"serveErrors\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 13\n            }\n          }, \"-\")],\n          receiveErrors: [/*#__PURE__*/React.createElement(MDBBtn, {\n            color: \"default\",\n            rounded: true,\n            size: \"sm\",\n            onClick: () => this.increasePlayerStat(i, \"receiveErrors\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 13\n            }\n          }, \"+\"), /*#__PURE__*/React.createElement(Fragment, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 13\n            }\n          }, this.state.players[i].receiveErrors), /*#__PURE__*/React.createElement(MDBBtn, {\n            color: \"default\",\n            rounded: true,\n            size: \"sm\",\n            onClick: () => this.decreasePlayerStat(i, \"receiveErrors\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 13\n            }\n          }, \"-\")],\n          aces: [/*#__PURE__*/React.createElement(MDBBtn, {\n            color: \"default\",\n            rounded: true,\n            size: \"sm\",\n            onClick: () => this.increasePlayerStat(i, \"aces\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 13\n            }\n          }, \"+\"), /*#__PURE__*/React.createElement(Fragment, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 13\n            }\n          }, this.state.players[i].aces), /*#__PURE__*/React.createElement(MDBBtn, {\n            color: \"default\",\n            rounded: true,\n            size: \"sm\",\n            onClick: () => this.decreasePlayerStat(i, \"aces\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 13\n            }\n          }, \"-\")],\n          attempts: [/*#__PURE__*/React.createElement(MDBBtn, {\n            color: \"default\",\n            rounded: true,\n            size: \"sm\",\n            onClick: () => this.increasePlayerStat(i, \"attempts\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 13\n            }\n          }, \"+\"), /*#__PURE__*/React.createElement(Fragment, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 13\n            }\n          }, this.state.players[i].attempts), /*#__PURE__*/React.createElement(MDBBtn, {\n            color: \"default\",\n            rounded: true,\n            size: \"sm\",\n            onClick: () => this.decreasePlayerStat(i, \"attempts\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 13\n            }\n          }, \"-\")]\n        });\n      }\n    } else {}\n\n    console.log(this.state.players);\n    return [[\n    /*#__PURE__*/\n    // [<h2>Nie</h2>, <h1>2</h1>],\n    React.createElement(Header, {\n      as: \"h1\",\n      floated: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }\n    }, \"Home \", this.state.allyGames, \" : \", this.state.oppGames, \" \", this.state.opponent), /*#__PURE__*/React.createElement(Header, {\n      as: \"h1\",\n      floated: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 9\n      }\n    }, this.state.allyPoints, \" : \", this.state.oppPoints), /*#__PURE__*/React.createElement(Header, {\n      as: \"h1\",\n      floated: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 9\n      }\n    }, \"Overall Statistics\")], /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 7\n      }\n    }, \"Players Statistics\"), /*#__PURE__*/React.createElement(MDBTable, {\n      btn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MDBTableHead, {\n      columns: columns,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(MDBTableBody, {\n      rows: rows_rounded_btn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 7\n      }\n    }, \"Overall Statistics\"), /*#__PURE__*/React.createElement(MDBTable, {\n      btn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MDBTableHead, {\n      columns: columns,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(MDBTableBody, {\n      rows: rows_rounded_btn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 9\n      }\n    }))];\n  }\n\n}\n\nexport default Match;","map":{"version":3,"sources":["/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/match/match.component.js"],"names":["Component","React","Fragment","Header","MDBBtn","MDBTable","MDBTableBody","MDBTableHead","axios","authHeader","matchService","Match","constructor","props","increasePlayerStat","index","stat","newArray","state","players","console","log","setState","prev","allSpikeErrors","increaseOpponentPoints","allBlockErrors","allServeErrors","allReceiveErrors","allSpikes","increaseAllyPoints","allBlocks","decreasePlayerStat","decreaseOpponentPoints","decreaseAllyPoints","allyPoints","oppGames","allyGames","Math","abs","oppPoints","resetPointsOnAllyGame","endMatch","resetPointsOnOpponentGame","match","_id","id","opponent","opponentGames","opponentPoints","updateMatch","token","errors","isFinished","increaseAllyGames","increaseOpponentGames","decreaseAllyGames","decreaseOpponentGames","attempts","points","allAces","allAttempts","componentDidMount","logged","config","headers","Authorization","matchId","JSON","parse","localStorage","getItem","response","get","data","err","render","columns","label","field","sort","rows_rounded_btn","length","i","push","name","spikes","blocks","spikeErrors","blockErrors","serveErrors","receiveErrors","aces"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,YAA3B,EAAyCC,YAAzC,QAA6D,UAA7D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AACA,MAAMC,KAAN,SAAoBX,SAApB,CAA8B;AAC5BY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA6DnBC,kBA7DmB,GA6DE,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACpC;AACA,UAAIC,QAAQ,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,OAAf,CAAf;AACAF,MAAAA,QAAQ,CAACF,KAAD,CAAR,CAAgBC,IAAhB,IAAwB,KAAKE,KAAL,CAAWC,OAAX,CAAmBJ,KAAnB,EAA0BC,IAA1B,IAAkC,CAA1D;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;;AACA,cAAQD,IAAR;AACE,aAAK,aAAL;AACE,eAAKM,QAAL,CAAeC,IAAD,KAAW;AACvBC,YAAAA,cAAc,EAAED,IAAI,CAACC,cAAL,GAAsB;AADf,WAAX,CAAd;AAGA,eAAKC,sBAAL;AACA;;AACF,aAAK,aAAL;AACE,eAAKH,QAAL,CAAeC,IAAD,KAAW;AACvBG,YAAAA,cAAc,EAAEH,IAAI,CAACG,cAAL,GAAsB;AADf,WAAX,CAAd;AAGA,eAAKD,sBAAL;AACA;;AACF,aAAK,aAAL;AACE,eAAKH,QAAL,CAAeC,IAAD,KAAW;AACvBI,YAAAA,cAAc,EAAEJ,IAAI,CAACI,cAAL,GAAsB;AADf,WAAX,CAAd;AAGA,eAAKF,sBAAL;AACA;;AACF,aAAK,eAAL;AACE,eAAKH,QAAL,CAAeC,IAAD,KAAW;AACvBK,YAAAA,gBAAgB,EAAEL,IAAI,CAACK,gBAAL,GAAwB;AADnB,WAAX,CAAd;AAGA,eAAKH,sBAAL;AACA;;AACF,aAAK,QAAL;AACE,eAAKH,QAAL,CAAeC,IAAD,KAAW;AACvBM,YAAAA,SAAS,EAAEN,IAAI,CAACM,SAAL,GAAiB;AADL,WAAX,CAAd;AAGA,eAAKC,kBAAL;AACA;;AACF,aAAK,QAAL;AACE,eAAKR,QAAL,CAAeC,IAAD,KAAW;AACvBQ,YAAAA,SAAS,EAAER,IAAI,CAACQ,SAAL,GAAiB;AADL,WAAX,CAAd;AAGA,eAAKD,kBAAL;AACA;;AACF,aAAK,MAAL;AACE,eAAKA,kBAAL;AACA;AAvCJ;;AAyCA,WAAKR,QAAL,CAAc,OAAO;AACnBH,QAAAA,OAAO,EAAEF;AADU,OAAP,CAAd;AAGD,KA9GkB;;AAAA,SA+GnBe,kBA/GmB,GA+GE,CAACjB,KAAD,EAAQC,IAAR,KAAiB;AACpC;AACA,UAAIC,QAAQ,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,OAAf,CAAf;AACAF,MAAAA,QAAQ,CAACF,KAAD,CAAR,CAAgBC,IAAhB,IAAwB,KAAKE,KAAL,CAAWC,OAAX,CAAmBJ,KAAnB,EAA0BC,IAA1B,IAAkC,CAA1D;;AACA,UAAIC,QAAQ,CAACF,KAAD,CAAR,CAAgBC,IAAhB,IAAwB,CAA5B,EAA+B;AAC7BC,QAAAA,QAAQ,CAACF,KAAD,CAAR,CAAgBC,IAAhB,IAAwB,CAAxB;AACD;;AACD,cAAQA,IAAR;AACE,aAAK,aAAL;AACA,aAAK,aAAL;AACA,aAAK,aAAL;AACA,aAAK,eAAL;AACE,eAAKiB,sBAAL;AACA;;AACF,aAAK,QAAL;AACA,aAAK,QAAL;AACA,aAAK,MAAL;AACE,eAAKC,kBAAL;AACA;AAXJ;;AAaAd,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,WAAKK,QAAL,CAAc,OAAO;AACnBH,QAAAA,OAAO,EAAEF;AADU,OAAP,CAAd;AAGD,KAvIkB;;AAAA,SAyInBa,kBAzImB,GAyIE,MAAM;AACzB,WAAKR,QAAL,CACGC,IAAD,KAAW;AACTY,QAAAA,UAAU,EAAEZ,IAAI,CAACY,UAAL,GAAkB;AADrB,OAAX,CADF,EAIE,MAAM;AACJf,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWiB,UAAvB;AACD,OANH;;AASA,UACE,KAAKjB,KAAL,CAAWkB,QAAX,IAAuB,CAAvB,IACA,KAAKlB,KAAL,CAAWmB,SAAX,IAAwB,CADxB,IAEA,KAAKnB,KAAL,CAAWiB,UAAX,GAAwB,EAFxB,IAGAG,IAAI,CAACC,GAAL,CAAS,KAAKrB,KAAL,CAAWiB,UAAX,GAAwB,KAAKjB,KAAL,CAAWsB,SAA5C,IAAyD,CAJ3D,EAKE;AACA,aAAKC,qBAAL;AACD;;AACD,UACE,KAAKvB,KAAL,CAAWiB,UAAX,GAAwB,EAAxB,IACAG,IAAI,CAACC,GAAL,CAAS,KAAKrB,KAAL,CAAWiB,UAAX,GAAwB,KAAKjB,KAAL,CAAWsB,SAA5C,IAAyD,CAF3D,EAGE;AACA,aAAKC,qBAAL;;AACA,YAAI,KAAKvB,KAAL,CAAWmB,SAAX,IAAwB,CAA5B,EAA+B;AAC7B,eAAKK,QAAL;AACD;AACF;AACF,KApKkB;;AAAA,SAqKnBC,yBArKmB,GAqKS,MAAM;AAChC;AACA,YAAMC,KAAK,GAAG;AACZC,QAAAA,GAAG,EAAE,KAAK3B,KAAL,CAAW4B,EADJ;AAEZC,QAAAA,QAAQ,EAAE,KAAK7B,KAAL,CAAW6B,QAFT;AAGZV,QAAAA,SAAS,EAAE,KAAKnB,KAAL,CAAWmB,SAHV;AAIZW,QAAAA,aAAa,EAAE,KAAK9B,KAAL,CAAWkB,QAAX,GAAsB,CAJzB;AAKZD,QAAAA,UAAU,EAAE,KAAKjB,KAAL,CAAWiB,UALX;AAMZc,QAAAA,cAAc,EAAE,KAAK/B,KAAL,CAAWsB,SANf;AAOZ;AACArB,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC;AARR,OAAd;AAUAT,MAAAA,YAAY,CAACwC,WAAb,CAAyBN,KAAzB,EAAgC,KAAK1B,KAAL,CAAWiC,KAA3C;AACA,WAAK7B,QAAL,CAAeC,IAAD,KAAW;AACvBa,QAAAA,QAAQ,EAAEb,IAAI,CAACa,QAAL,GAAgB,CADH;AAEvBI,QAAAA,SAAS,EAAE,CAFY;AAGvBL,QAAAA,UAAU,EAAE;AAHW,OAAX,CAAd;AAKD,KAvLkB;;AAAA,SAwLnBV,sBAxLmB,GAwLM,MAAM;AAC7B,WAAKH,QAAL,CACGC,IAAD,KAAW;AACTiB,QAAAA,SAAS,EAAEjB,IAAI,CAACiB,SAAL,GAAiB,CADnB;AAETY,QAAAA,MAAM,EAAE7B,IAAI,CAAC6B,MAAL;AAFC,OAAX,CADF,EAKE,MAAM;AACJhC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWsB,SAAvB;AACD,OAPH;;AASA,UACE,KAAKtB,KAAL,CAAWkB,QAAX,IAAuB,CAAvB,IACA,KAAKlB,KAAL,CAAWmB,SAAX,IAAwB,CADxB,IAEA,KAAKnB,KAAL,CAAWsB,SAAX,GAAuB,EAFvB,IAGAF,IAAI,CAACC,GAAL,CAAS,KAAKrB,KAAL,CAAWsB,SAAX,GAAuB,KAAKtB,KAAL,CAAWiB,UAA3C,IAAyD,CAJ3D,EAKE;AACA,aAAKQ,yBAAL;AACD;;AACD,UACE,KAAKzB,KAAL,CAAWsB,SAAX,GAAuB,EAAvB,IACAF,IAAI,CAACC,GAAL,CAAS,KAAKrB,KAAL,CAAWsB,SAAX,GAAuB,KAAKtB,KAAL,CAAWiB,UAA3C,IAAyD,CAF3D,EAGE;AACA,aAAKQ,yBAAL;;AACA,YAAI,KAAKzB,KAAL,CAAWkB,QAAX,IAAuB,CAA3B,EAA8B;AAC5B,eAAKM,QAAL;AACD;AACF;AACF,KAnNkB;;AAAA,SAqNnBA,QArNmB,GAqNR,MAAM;AACf,WAAKpB,QAAL,CAAc;AACZ+B,QAAAA,UAAU,EAAE;AADA,OAAd;AAGD,KAzNkB;;AAAA,SA2NnBZ,qBA3NmB,GA2NK,MAAM;AAC5B;AACA,YAAMG,KAAK,GAAG;AACZC,QAAAA,GAAG,EAAE,KAAK3B,KAAL,CAAW4B,EADJ;AAEZC,QAAAA,QAAQ,EAAE,KAAK7B,KAAL,CAAW6B,QAFT;AAGZV,QAAAA,SAAS,EAAE,KAAKnB,KAAL,CAAWmB,SAAX,GAAuB,CAHtB;AAIZW,QAAAA,aAAa,EAAE,KAAK9B,KAAL,CAAWkB,QAJd;AAKZD,QAAAA,UAAU,EAAE,KAAKjB,KAAL,CAAWiB,UALX;AAMZc,QAAAA,cAAc,EAAE,KAAK/B,KAAL,CAAWsB,SANf;AAOZ;AACA;AACArB,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC;AATR,OAAd;AAWAT,MAAAA,YAAY,CAACwC,WAAb,CAAyBN,KAAzB,EAAgC,KAAK1B,KAAL,CAAWiC,KAA3C;AACA,WAAK7B,QAAL,CAAeC,IAAD,KAAW;AACvBc,QAAAA,SAAS,EAAEd,IAAI,CAACc,SAAL,GAAiB,CADL;AAEvBG,QAAAA,SAAS,EAAE,CAFY;AAGvBL,QAAAA,UAAU,EAAE;AAHW,OAAX,CAAd;AAKD,KA9OkB;;AAAA,SAgPnBmB,iBAhPmB,GAgPC,MAAM;AACxB,WAAKhC,QAAL,CACGC,IAAD,KAAW;AACTc,QAAAA,SAAS,EAAEd,IAAI,CAACc,SAAL,GAAiB;AADnB,OAAX,CADF,EAIE,MAAM;AACJjB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWmB,SAAvB;AACD,OANH;AAQD,KAzPkB;;AAAA,SA0PnBkB,qBA1PmB,GA0PK,MAAM;AAC5B,WAAKjC,QAAL,CACGC,IAAD,KAAW;AACTa,QAAAA,QAAQ,EAAEb,IAAI,CAACa,QAAL,GAAgB;AADjB,OAAX,CADF,EAIE,MAAM;AACJhB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWkB,QAAvB;AACD,OANH;AAQD,KAnQkB;;AAAA,SAoQnBF,kBApQmB,GAoQE,MAAM;AACzB,UAAI,KAAKhB,KAAL,CAAWiB,UAAX,GAAwB,CAAxB,GAA4B,CAAhC,EAAmC;AACjC;AACD;;AACD,WAAKb,QAAL,CACGC,IAAD,KAAW;AACTY,QAAAA,UAAU,EAAEZ,IAAI,CAACY,UAAL,GAAkB;AADrB,OAAX,CADF,EAIE,MAAM;AACJf,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWiB,UAAvB;AACD,OANH;AAQD,KAhRkB;;AAAA,SAiRnBF,sBAjRmB,GAiRM,MAAM;AAC7B,UAAI,KAAKf,KAAL,CAAWsB,SAAX,GAAuB,CAAvB,GAA2B,CAA/B,EAAkC;AAChC;AACD;;AACD,WAAKlB,QAAL,CACGC,IAAD,KAAW;AACTiB,QAAAA,SAAS,EAAEjB,IAAI,CAACiB,SAAL,GAAiB;AADnB,OAAX,CADF,EAIE,MAAM;AACJpB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWsB,SAAvB;AACD,OANH;AAQD,KA7RkB;;AAAA,SA8RnBgB,iBA9RmB,GA8RC,MAAM;AACxB,UAAI,KAAKtC,KAAL,CAAWmB,SAAX,GAAuB,CAAvB,GAA2B,CAA/B,EAAkC;AAChC;AACD;;AACD,WAAKf,QAAL,CACGC,IAAD,KAAW;AACTc,QAAAA,SAAS,EAAEd,IAAI,CAACc,SAAL,GAAiB;AADnB,OAAX,CADF,EAIE,MAAM;AACJjB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWmB,SAAvB;AACD,OANH;AAQD,KA1SkB;;AAAA,SA2SnBoB,qBA3SmB,GA2SK,MAAM;AAC5B,UAAI,KAAKvC,KAAL,CAAWkB,QAAX,GAAsB,CAAtB,GAA0B,CAA9B,EAAiC;AAC/B;AACD;;AACD,WAAKd,QAAL,CACGC,IAAD,KAAW;AACTa,QAAAA,QAAQ,EAAEb,IAAI,CAACa,QAAL,GAAgB;AADjB,OAAX,CADF,EAIE,MAAM;AACJhB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWkB,QAAvB;AACD,OANH;AAQD,KAvTkB;;AAGjB,SAAKlB,KAAL,GAAa;AACX4B,MAAAA,EAAE,EAAE,EADO;AAEXX,MAAAA,UAAU,EAAE,CAFD;AAGXK,MAAAA,SAAS,EAAE,CAHA;AAIXH,MAAAA,SAAS,EAAE,CAJA;AAKXD,MAAAA,QAAQ,EAAE,CALC;AAMXjB,MAAAA,OAAO,EAAE,EANE;AAOXuC,MAAAA,QAAQ,EAAE,CAPC;AAQXN,MAAAA,MAAM,EAAE,CARG;AASXO,MAAAA,MAAM,EAAE,CATG;AAUXZ,MAAAA,QAAQ,EAAE,EAVC;AAWXlB,MAAAA,SAAS,EAAE,CAXA;AAYXE,MAAAA,SAAS,EAAE,CAZA;AAaXP,MAAAA,cAAc,EAAE,CAbL;AAcXE,MAAAA,cAAc,EAAE,CAdL;AAeXC,MAAAA,cAAc,EAAE,CAfL;AAgBXC,MAAAA,gBAAgB,EAAE,CAhBP;AAiBXgC,MAAAA,OAAO,EAAE,CAjBE;AAkBXC,MAAAA,WAAW,EAAE,CAlBF;AAmBXR,MAAAA,UAAU,EAAE,KAnBD;AAoBXF,MAAAA,KAAK,EAAE1C,UAAU;AApBN,KAAb;AAsBD;;AAED,QAAMqD,iBAAN,GAA0B;AACxB,UAAMC,MAAM,GAAGtD,UAAU,EAAzB;;AAEA,QAAI;AACF;AACA;AACA,YAAMuD,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAG,UAASH,MAAM,CAACZ,KAAM;AAAxC;AADI,OAAf;AAGA,YAAMgB,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAhB;AAEA,YAAMC,QAAQ,GAAG,MAAMhE,KAAK,CAACiE,GAAN,CACrB,qCAAqCN,OADhB,EAErBH,MAFqB,CAAvB,CARE,CAYF;;AACA,WAAK1C,QAAL,CAAc;AACZH,QAAAA,OAAO,EAAEqD,QAAQ,CAACE,IAAT,CAAcvD,OADX;AAEZ4B,QAAAA,QAAQ,EAAEyB,QAAQ,CAACE,IAAT,CAAc3B,QAFZ;AAGZD,QAAAA,EAAE,EAAE0B,QAAQ,CAACE,IAAT,CAAc7B,GAHN;AAIZR,QAAAA,SAAS,EAAEmC,QAAQ,CAACE,IAAT,CAAcrC,SAJb;AAKZD,QAAAA,QAAQ,EAAEoC,QAAQ,CAACE,IAAT,CAAc1B,aALZ;AAMZb,QAAAA,UAAU,EAAE,CANA;AAOZK,QAAAA,SAAS,EAAE;AAPC,OAAd;AASApB,MAAAA,OAAO,CAACC,GAAR,CAAYmD,QAAQ,CAACE,IAArB,EAtBE,CAuBF;AACA;AACD,KAzBD,CAyBE,OAAOC,GAAP,EAAY,CACZ;AACA;AACD;AACF;;AA8PDC,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG,CACd;AACEC,MAAAA,KAAK,EAAE,MADT;AAEEC,MAAAA,KAAK,EAAE,MAFT;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADc,EAMd;AACEF,MAAAA,KAAK,EAAE,QADT;AAEEC,MAAAA,KAAK,EAAE,QAFT;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANc,EAWd;AACEF,MAAAA,KAAK,EAAE,QADT;AAEEC,MAAAA,KAAK,EAAE,QAFT;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXc,EAgBd;AACEF,MAAAA,KAAK,EAAE,aADT;AAEEC,MAAAA,KAAK,EAAE,aAFT;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBc,EAqBd;AACEF,MAAAA,KAAK,EAAE,aADT;AAEEC,MAAAA,KAAK,EAAE,aAFT;AAGEC,MAAAA,IAAI,EAAE;AAHR,KArBc,EA0Bd;AACEF,MAAAA,KAAK,EAAE,cADT;AAEEC,MAAAA,KAAK,EAAE,aAFT;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA1Bc,EA+Bd;AACEF,MAAAA,KAAK,EAAE,eADT;AAEEC,MAAAA,KAAK,EAAE,eAFT;AAGEC,MAAAA,IAAI,EAAE;AAHR,KA/Bc,EAoCd;AACEF,MAAAA,KAAK,EAAE,MADT;AAEEC,MAAAA,KAAK,EAAE,MAFT;AAGEC,MAAAA,IAAI,EAAE;AAHR,KApCc,EAyCd;AACEF,MAAAA,KAAK,EAAE,UADT;AAEEC,MAAAA,KAAK,EAAE,UAFT;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAzCc,CAAhB;AA+CA,QAAIC,gBAAgB,GAAG,EAAvB;;AACA,QAAI,KAAK/D,KAAL,CAAWC,OAAX,CAAmB+D,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKjE,KAAL,CAAWC,OAAX,CAAmB+D,MAAvC,EAA+CC,CAAC,EAAhD,EAAoD;AAClDF,QAAAA,gBAAgB,CAACG,IAAjB,CAAsB;AACpBC,UAAAA,IAAI,EAAE,KAAKnE,KAAL,CAAWC,OAAX,CAAmBgE,CAAnB,EAAsB,MAAtB,CADc;AAEpBG,UAAAA,MAAM,EAAE,cACN,oBAAC,MAAD;AACE,YAAA,KAAK,EAAC,SADR;AAEE,YAAA,OAAO,MAFT;AAGE,YAAA,IAAI,EAAC,IAHP;AAIE,YAAA,OAAO,EAAE,MAAM,KAAKxE,kBAAL,CAAwBqE,CAAxB,EAA2B,QAA3B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADM,eASN,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAW,KAAKjE,KAAL,CAAWC,OAAX,CAAmBgE,CAAnB,EAAsBG,MAAjC,CATM,eAUN,oBAAC,MAAD;AACE,YAAA,KAAK,EAAC,SADR;AAEE,YAAA,OAAO,MAFT;AAGE,YAAA,IAAI,EAAC,IAHP;AAIE,YAAA,OAAO,EAAE,MAAM,KAAKtD,kBAAL,CAAwBmD,CAAxB,EAA2B,QAA3B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVM,CAFY;AAqBpBI,UAAAA,MAAM,EAAE,cACN,oBAAC,MAAD;AACE,YAAA,KAAK,EAAC,SADR;AAEE,YAAA,OAAO,MAFT;AAGE,YAAA,IAAI,EAAC,IAHP;AAIE,YAAA,OAAO,EAAE,MAAM,KAAKzE,kBAAL,CAAwBqE,CAAxB,EAA2B,QAA3B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADM,eASN,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAW,KAAKjE,KAAL,CAAWC,OAAX,CAAmBgE,CAAnB,EAAsBI,MAAjC,CATM,eAUN,oBAAC,MAAD;AACE,YAAA,KAAK,EAAC,SADR;AAEE,YAAA,OAAO,MAFT;AAGE,YAAA,IAAI,EAAC,IAHP;AAIE,YAAA,OAAO,EAAE,MAAM,KAAKvD,kBAAL,CAAwBmD,CAAxB,EAA2B,QAA3B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVM,CArBY;AAwCpBK,UAAAA,WAAW,EAAE,cACX,oBAAC,MAAD;AACE,YAAA,KAAK,EAAC,SADR;AAEE,YAAA,OAAO,MAFT;AAGE,YAAA,IAAI,EAAC,IAHP;AAIE,YAAA,OAAO,EAAE,MAAM,KAAK1E,kBAAL,CAAwBqE,CAAxB,EAA2B,aAA3B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADW,eASX,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAW,KAAKjE,KAAL,CAAWC,OAAX,CAAmBgE,CAAnB,EAAsBK,WAAjC,CATW,eAUX,oBAAC,MAAD;AACE,YAAA,KAAK,EAAC,SADR;AAEE,YAAA,OAAO,MAFT;AAGE,YAAA,IAAI,EAAC,IAHP;AAIE,YAAA,OAAO,EAAE,MAAM,KAAKxD,kBAAL,CAAwBmD,CAAxB,EAA2B,aAA3B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVW,CAxCO;AA2DpBM,UAAAA,WAAW,EAAE,cACX,oBAAC,MAAD;AACE,YAAA,KAAK,EAAC,SADR;AAEE,YAAA,OAAO,MAFT;AAGE,YAAA,IAAI,EAAC,IAHP;AAIE,YAAA,OAAO,EAAE,MAAM,KAAK3E,kBAAL,CAAwBqE,CAAxB,EAA2B,aAA3B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADW,eASX,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAW,KAAKjE,KAAL,CAAWC,OAAX,CAAmBgE,CAAnB,EAAsBM,WAAjC,CATW,eAUX,oBAAC,MAAD;AACE,YAAA,KAAK,EAAC,SADR;AAEE,YAAA,OAAO,MAFT;AAGE,YAAA,IAAI,EAAC,IAHP;AAIE,YAAA,OAAO,EAAE,MAAM,KAAKzD,kBAAL,CAAwBmD,CAAxB,EAA2B,aAA3B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVW,CA3DO;AA8EpBO,UAAAA,WAAW,EAAE,cACX,oBAAC,MAAD;AACE,YAAA,KAAK,EAAC,SADR;AAEE,YAAA,OAAO,MAFT;AAGE,YAAA,IAAI,EAAC,IAHP;AAIE,YAAA,OAAO,EAAE,MAAM,KAAK5E,kBAAL,CAAwBqE,CAAxB,EAA2B,aAA3B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADW,eASX,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAW,KAAKjE,KAAL,CAAWC,OAAX,CAAmBgE,CAAnB,EAAsBO,WAAjC,CATW,eAUX,oBAAC,MAAD;AACE,YAAA,KAAK,EAAC,SADR;AAEE,YAAA,OAAO,MAFT;AAGE,YAAA,IAAI,EAAC,IAHP;AAIE,YAAA,OAAO,EAAE,MAAM,KAAK1D,kBAAL,CAAwBmD,CAAxB,EAA2B,aAA3B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVW,CA9EO;AAiGpBQ,UAAAA,aAAa,EAAE,cACb,oBAAC,MAAD;AACE,YAAA,KAAK,EAAC,SADR;AAEE,YAAA,OAAO,MAFT;AAGE,YAAA,IAAI,EAAC,IAHP;AAIE,YAAA,OAAO,EAAE,MAAM,KAAK7E,kBAAL,CAAwBqE,CAAxB,EAA2B,eAA3B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADa,eASb,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAW,KAAKjE,KAAL,CAAWC,OAAX,CAAmBgE,CAAnB,EAAsBQ,aAAjC,CATa,eAUb,oBAAC,MAAD;AACE,YAAA,KAAK,EAAC,SADR;AAEE,YAAA,OAAO,MAFT;AAGE,YAAA,IAAI,EAAC,IAHP;AAIE,YAAA,OAAO,EAAE,MAAM,KAAK3D,kBAAL,CAAwBmD,CAAxB,EAA2B,eAA3B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVa,CAjGK;AAoHpBS,UAAAA,IAAI,EAAE,cACJ,oBAAC,MAAD;AACE,YAAA,KAAK,EAAC,SADR;AAEE,YAAA,OAAO,MAFT;AAGE,YAAA,IAAI,EAAC,IAHP;AAIE,YAAA,OAAO,EAAE,MAAM,KAAK9E,kBAAL,CAAwBqE,CAAxB,EAA2B,MAA3B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADI,eASJ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAW,KAAKjE,KAAL,CAAWC,OAAX,CAAmBgE,CAAnB,EAAsBS,IAAjC,CATI,eAUJ,oBAAC,MAAD;AACE,YAAA,KAAK,EAAC,SADR;AAEE,YAAA,OAAO,MAFT;AAGE,YAAA,IAAI,EAAC,IAHP;AAIE,YAAA,OAAO,EAAE,MAAM,KAAK5D,kBAAL,CAAwBmD,CAAxB,EAA2B,MAA3B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVI,CApHc;AAuIpBzB,UAAAA,QAAQ,EAAE,cACR,oBAAC,MAAD;AACE,YAAA,KAAK,EAAC,SADR;AAEE,YAAA,OAAO,MAFT;AAGE,YAAA,IAAI,EAAC,IAHP;AAIE,YAAA,OAAO,EAAE,MAAM,KAAK5C,kBAAL,CAAwBqE,CAAxB,EAA2B,UAA3B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADQ,eASR,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAW,KAAKjE,KAAL,CAAWC,OAAX,CAAmBgE,CAAnB,EAAsBzB,QAAjC,CATQ,eAUR,oBAAC,MAAD;AACE,YAAA,KAAK,EAAC,SADR;AAEE,YAAA,OAAO,MAFT;AAGE,YAAA,IAAI,EAAC,IAHP;AAIE,YAAA,OAAO,EAAE,MAAM,KAAK1B,kBAAL,CAAwBmD,CAAxB,EAA2B,UAA3B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVQ;AAvIU,SAAtB;AA2JD;AACF,KA9JD,MA8JO,CACN;;AACD/D,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWC,OAAvB;AACA,WAAO,CACL;AAAA;AACE;AACA,wBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAgB,MAAA,OAAO,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACQ,KAAKD,KAAL,CAAWmB,SADnB,SACiC,KAAKnB,KAAL,CAAWkB,QAD5C,EACsD,GADtD,EAEG,KAAKlB,KAAL,CAAW6B,QAFd,CAFF,eAME,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAgB,MAAA,OAAO,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK7B,KAAL,CAAWiB,UADd,SAC6B,KAAKjB,KAAL,CAAWsB,SADxC,CANF,eASE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAgB,MAAA,OAAO,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BATF,CADK,eAcL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAdK,eAeL,oBAAC,QAAD;AAAU,MAAA,GAAG,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEqC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAEI,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAfK,eAmBL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAnBK,eAoBL,oBAAC,QAAD;AAAU,MAAA,GAAG,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEJ,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAEI,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CApBK,CAAP;AAyBD;;AAriB2B;;AAuiB9B,eAAetE,KAAf","sourcesContent":["import { Component } from \"react\";\nimport React, { Fragment } from \"react\";\nimport { Header } from \"semantic-ui-react\";\nimport { MDBBtn, MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\nimport axios from \"axios\";\nimport authHeader from \"../../services/auth-header\";\nimport matchService from \"../../services/match.service\";\nclass Match extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: \"\",\n      allyPoints: 0,\n      oppPoints: 0,\n      allyGames: 0,\n      oppGames: 0,\n      players: [],\n      attempts: 0,\n      errors: 0,\n      points: 0,\n      opponent: \"\",\n      allSpikes: 0,\n      allBlocks: 0,\n      allSpikeErrors: 0,\n      allBlockErrors: 0,\n      allServeErrors: 0,\n      allReceiveErrors: 0,\n      allAces: 0,\n      allAttempts: 0,\n      isFinished: false,\n      token: authHeader(),\n    };\n  }\n\n  async componentDidMount() {\n    const logged = authHeader();\n\n    try {\n      // if (!playersLoaded) {\n      // setPlayersLoaded(true);\n      const config = {\n        headers: { Authorization: `Bearer ${logged.token}` },\n      };\n      const matchId = JSON.parse(localStorage.getItem(\"matchId\"));\n\n      const response = await axios.get(\n        \"http://localhost:8080/api/match/\" + matchId,\n        config\n      );\n      // console.log(response);\n      this.setState({\n        players: response.data.players,\n        opponent: response.data.opponent,\n        id: response.data._id,\n        allyGames: response.data.allyGames,\n        oppGames: response.data.opponentGames,\n        allyPoints: 0,\n        oppPoints: 0,\n      });\n      console.log(response.data);\n      // setPlayers(response.data);\n      // }\n    } catch (err) {\n      // setError(err);\n      // setPlayersLoaded(false);\n    }\n  }\n\n  increasePlayerStat = (index, stat) => {\n    // updatePlayers = players[index][stat]++;\n    let newArray = [...this.state.players];\n    newArray[index][stat] = this.state.players[index][stat] + 1;\n    console.log(newArray);\n    switch (stat) {\n      case \"spikeErrors\":\n        this.setState((prev) => ({\n          allSpikeErrors: prev.allSpikeErrors + 1,\n        }));\n        this.increaseOpponentPoints();\n        break;\n      case \"blockErrors\":\n        this.setState((prev) => ({\n          allBlockErrors: prev.allBlockErrors + 1,\n        }));\n        this.increaseOpponentPoints();\n        break;\n      case \"serveErrors\":\n        this.setState((prev) => ({\n          allServeErrors: prev.allServeErrors + 1,\n        }));\n        this.increaseOpponentPoints();\n        break;\n      case \"receiveErrors\":\n        this.setState((prev) => ({\n          allReceiveErrors: prev.allReceiveErrors + 1,\n        }));\n        this.increaseOpponentPoints();\n        break;\n      case \"spikes\":\n        this.setState((prev) => ({\n          allSpikes: prev.allSpikes + 1,\n        }));\n        this.increaseAllyPoints();\n        break;\n      case \"blocks\":\n        this.setState((prev) => ({\n          allBlocks: prev.allBlocks + 1,\n        }));\n        this.increaseAllyPoints();\n        break;\n      case \"aces\":\n        this.increaseAllyPoints();\n        break;\n    }\n    this.setState(() => ({\n      players: newArray,\n    }));\n  };\n  decreasePlayerStat = (index, stat) => {\n    // updatePlayers = players[index][stat]++;\n    let newArray = [...this.state.players];\n    newArray[index][stat] = this.state.players[index][stat] - 1;\n    if (newArray[index][stat] < 0) {\n      newArray[index][stat] = 0;\n    }\n    switch (stat) {\n      case \"spikeErrors\":\n      case \"blockErrors\":\n      case \"serveErrors\":\n      case \"receiveErrors\":\n        this.decreaseOpponentPoints();\n        break;\n      case \"spikes\":\n      case \"blocks\":\n      case \"aces\":\n        this.decreaseAllyPoints();\n        break;\n    }\n    console.log(newArray);\n    this.setState(() => ({\n      players: newArray,\n    }));\n  };\n\n  increaseAllyPoints = () => {\n    this.setState(\n      (prev) => ({\n        allyPoints: prev.allyPoints + 1,\n      }),\n      () => {\n        console.log(this.state.allyPoints);\n      }\n    );\n\n    if (\n      this.state.oppGames == 2 &&\n      this.state.allyGames == 2 &&\n      this.state.allyPoints > 14 &&\n      Math.abs(this.state.allyPoints - this.state.oppPoints) > 1\n    ) {\n      this.resetPointsOnAllyGame();\n    }\n    if (\n      this.state.allyPoints > 23 &&\n      Math.abs(this.state.allyPoints - this.state.oppPoints) > 1\n    ) {\n      this.resetPointsOnAllyGame();\n      if (this.state.allyGames == 3) {\n        this.endMatch();\n      }\n    }\n  };\n  resetPointsOnOpponentGame = () => {\n    // TODO: update DB\n    const match = {\n      _id: this.state.id,\n      opponent: this.state.opponent,\n      allyGames: this.state.allyGames,\n      opponentGames: this.state.oppGames + 1,\n      allyPoints: this.state.allyPoints,\n      opponentPoints: this.state.oppPoints,\n      // attempts: this.state.attemps,\n      players: this.state.players,\n    };\n    matchService.updateMatch(match, this.state.token);\n    this.setState((prev) => ({\n      oppGames: prev.oppGames + 1,\n      oppPoints: 0,\n      allyPoints: 0,\n    }));\n  };\n  increaseOpponentPoints = () => {\n    this.setState(\n      (prev) => ({\n        oppPoints: prev.oppPoints + 1,\n        errors: prev.errors++,\n      }),\n      () => {\n        console.log(this.state.oppPoints);\n      }\n    );\n    if (\n      this.state.oppGames == 2 &&\n      this.state.allyGames == 2 &&\n      this.state.oppPoints > 14 &&\n      Math.abs(this.state.oppPoints - this.state.allyPoints) > 1\n    ) {\n      this.resetPointsOnOpponentGame();\n    }\n    if (\n      this.state.oppPoints > 23 &&\n      Math.abs(this.state.oppPoints - this.state.allyPoints) > 1\n    ) {\n      this.resetPointsOnOpponentGame();\n      if (this.state.oppGames == 3) {\n        this.endMatch();\n      }\n    }\n  };\n\n  endMatch = () => {\n    this.setState({\n      isFinished: true,\n    });\n  };\n\n  resetPointsOnAllyGame = () => {\n    // TODO: update DB\n    const match = {\n      _id: this.state.id,\n      opponent: this.state.opponent,\n      allyGames: this.state.allyGames + 1,\n      opponentGames: this.state.oppGames,\n      allyPoints: this.state.allyPoints,\n      opponentPoints: this.state.oppPoints,\n      // attempts: this.state.attemps,\n      // errorPoints: this.state.errorPoints,\n      players: this.state.players,\n    };\n    matchService.updateMatch(match, this.state.token);\n    this.setState((prev) => ({\n      allyGames: prev.allyGames + 1,\n      oppPoints: 0,\n      allyPoints: 0,\n    }));\n  };\n\n  increaseAllyGames = () => {\n    this.setState(\n      (prev) => ({\n        allyGames: prev.allyGames + 1,\n      }),\n      () => {\n        console.log(this.state.allyGames);\n      }\n    );\n  };\n  increaseOpponentGames = () => {\n    this.setState(\n      (prev) => ({\n        oppGames: prev.oppGames + 1,\n      }),\n      () => {\n        console.log(this.state.oppGames);\n      }\n    );\n  };\n  decreaseAllyPoints = () => {\n    if (this.state.allyPoints - 1 < 0) {\n      return;\n    }\n    this.setState(\n      (prev) => ({\n        allyPoints: prev.allyPoints - 1,\n      }),\n      () => {\n        console.log(this.state.allyPoints);\n      }\n    );\n  };\n  decreaseOpponentPoints = () => {\n    if (this.state.oppPoints - 1 < 0) {\n      return;\n    }\n    this.setState(\n      (prev) => ({\n        oppPoints: prev.oppPoints - 1,\n      }),\n      () => {\n        console.log(this.state.oppPoints);\n      }\n    );\n  };\n  decreaseAllyGames = () => {\n    if (this.state.allyGames - 1 < 0) {\n      return;\n    }\n    this.setState(\n      (prev) => ({\n        allyGames: prev.allyGames - 1,\n      }),\n      () => {\n        console.log(this.state.allyGames);\n      }\n    );\n  };\n  decreaseOpponentGames = () => {\n    if (this.state.oppGames - 1 < 0) {\n      return;\n    }\n    this.setState(\n      (prev) => ({\n        oppGames: prev.oppGames - 1,\n      }),\n      () => {\n        console.log(this.state.oppGames);\n      }\n    );\n  };\n\n  render() {\n    const columns = [\n      {\n        label: \"Name\",\n        field: \"name\",\n        sort: \"asc\",\n      },\n      {\n        label: \"Spikes\",\n        field: \"spikes\",\n        sort: \"asc\",\n      },\n      {\n        label: \"Blocks\",\n        field: \"blocks\",\n        sort: \"asc\",\n      },\n      {\n        label: \"SpikeErrors\",\n        field: \"spikeErrors\",\n        sort: \"asc\",\n      },\n      {\n        label: \"blockErrors\",\n        field: \"blockErrors\",\n        sort: \"asc\",\n      },\n      {\n        label: \"ServerErrors\",\n        field: \"serveErrors\",\n        sort: \"asc\",\n      },\n      {\n        label: \"ReceiveErrors\",\n        field: \"receiveErrors\",\n        sort: \"asc\",\n      },\n      {\n        label: \"Aces\",\n        field: \"aces\",\n        sort: \"asc\",\n      },\n      {\n        label: \"Attempts\",\n        field: \"attempts\",\n        sort: \"asc\",\n      },\n    ];\n    let rows_rounded_btn = [];\n    if (this.state.players.length > 0) {\n      for (let i = 0; i < this.state.players.length; i++) {\n        rows_rounded_btn.push({\n          name: this.state.players[i][\"name\"],\n          spikes: [\n            <MDBBtn\n              color=\"default\"\n              rounded\n              size=\"sm\"\n              onClick={() => this.increasePlayerStat(i, \"spikes\")}\n            >\n              +\n            </MDBBtn>,\n            <Fragment>{this.state.players[i].spikes}</Fragment>,\n            <MDBBtn\n              color=\"default\"\n              rounded\n              size=\"sm\"\n              onClick={() => this.decreasePlayerStat(i, \"spikes\")}\n            >\n              -\n            </MDBBtn>,\n          ],\n          blocks: [\n            <MDBBtn\n              color=\"default\"\n              rounded\n              size=\"sm\"\n              onClick={() => this.increasePlayerStat(i, \"blocks\")}\n            >\n              +\n            </MDBBtn>,\n            <Fragment>{this.state.players[i].blocks}</Fragment>,\n            <MDBBtn\n              color=\"default\"\n              rounded\n              size=\"sm\"\n              onClick={() => this.decreasePlayerStat(i, \"blocks\")}\n            >\n              -\n            </MDBBtn>,\n          ],\n          spikeErrors: [\n            <MDBBtn\n              color=\"default\"\n              rounded\n              size=\"sm\"\n              onClick={() => this.increasePlayerStat(i, \"spikeErrors\")}\n            >\n              +\n            </MDBBtn>,\n            <Fragment>{this.state.players[i].spikeErrors}</Fragment>,\n            <MDBBtn\n              color=\"default\"\n              rounded\n              size=\"sm\"\n              onClick={() => this.decreasePlayerStat(i, \"spikeErrors\")}\n            >\n              -\n            </MDBBtn>,\n          ],\n          blockErrors: [\n            <MDBBtn\n              color=\"default\"\n              rounded\n              size=\"sm\"\n              onClick={() => this.increasePlayerStat(i, \"blockErrors\")}\n            >\n              +\n            </MDBBtn>,\n            <Fragment>{this.state.players[i].blockErrors}</Fragment>,\n            <MDBBtn\n              color=\"default\"\n              rounded\n              size=\"sm\"\n              onClick={() => this.decreasePlayerStat(i, \"blockErrors\")}\n            >\n              -\n            </MDBBtn>,\n          ],\n          serveErrors: [\n            <MDBBtn\n              color=\"default\"\n              rounded\n              size=\"sm\"\n              onClick={() => this.increasePlayerStat(i, \"serveErrors\")}\n            >\n              +\n            </MDBBtn>,\n            <Fragment>{this.state.players[i].serveErrors}</Fragment>,\n            <MDBBtn\n              color=\"default\"\n              rounded\n              size=\"sm\"\n              onClick={() => this.decreasePlayerStat(i, \"serveErrors\")}\n            >\n              -\n            </MDBBtn>,\n          ],\n          receiveErrors: [\n            <MDBBtn\n              color=\"default\"\n              rounded\n              size=\"sm\"\n              onClick={() => this.increasePlayerStat(i, \"receiveErrors\")}\n            >\n              +\n            </MDBBtn>,\n            <Fragment>{this.state.players[i].receiveErrors}</Fragment>,\n            <MDBBtn\n              color=\"default\"\n              rounded\n              size=\"sm\"\n              onClick={() => this.decreasePlayerStat(i, \"receiveErrors\")}\n            >\n              -\n            </MDBBtn>,\n          ],\n          aces: [\n            <MDBBtn\n              color=\"default\"\n              rounded\n              size=\"sm\"\n              onClick={() => this.increasePlayerStat(i, \"aces\")}\n            >\n              +\n            </MDBBtn>,\n            <Fragment>{this.state.players[i].aces}</Fragment>,\n            <MDBBtn\n              color=\"default\"\n              rounded\n              size=\"sm\"\n              onClick={() => this.decreasePlayerStat(i, \"aces\")}\n            >\n              -\n            </MDBBtn>,\n          ],\n          attempts: [\n            <MDBBtn\n              color=\"default\"\n              rounded\n              size=\"sm\"\n              onClick={() => this.increasePlayerStat(i, \"attempts\")}\n            >\n              +\n            </MDBBtn>,\n            <Fragment>{this.state.players[i].attempts}</Fragment>,\n            <MDBBtn\n              color=\"default\"\n              rounded\n              size=\"sm\"\n              onClick={() => this.decreasePlayerStat(i, \"attempts\")}\n            >\n              -\n            </MDBBtn>,\n          ],\n        });\n      }\n    } else {\n    }\n    console.log(this.state.players);\n    return [\n      [\n        // [<h2>Nie</h2>, <h1>2</h1>],\n        <Header as=\"h1\" floated=\"left\">\n          Home {this.state.allyGames} : {this.state.oppGames}{\" \"}\n          {this.state.opponent}\n        </Header>,\n        <Header as=\"h1\" floated=\"left\">\n          {this.state.allyPoints} : {this.state.oppPoints}\n        </Header>,\n        <Header as=\"h1\" floated=\"right\">\n          Overall Statistics\n        </Header>,\n      ],\n      <Fragment>Players Statistics</Fragment>,\n      <MDBTable btn>\n        <MDBTableHead columns={columns} />\n        <MDBTableBody rows={rows_rounded_btn} />\n      </MDBTable>,\n      <Fragment>Overall Statistics</Fragment>,\n      <MDBTable btn>\n        <MDBTableHead columns={columns} />\n        <MDBTableBody rows={rows_rounded_btn} />\n      </MDBTable>,\n    ];\n  }\n}\nexport default Match;\n"]},"metadata":{},"sourceType":"module"}