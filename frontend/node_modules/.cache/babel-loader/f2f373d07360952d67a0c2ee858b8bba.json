{"ast":null,"code":"var _jsxFileName = \"/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/teams/teamListView.component.js\";\nimport React from \"react\";\nimport Button from \"../button.component\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { List as MuiList } from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { FixedSizeList } from \"react-window\";\nimport MaterialTable from \"material-table\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { MuiCardStyled, CardContentStyled, OutlinedInputStyled, CardHeaderStyled, ListItemStyled, TextDiv, VersionDiv, StatusDiv, StatusGreenDiv, PaddedDiv } from \"./styled\"; // import { List as MuiList } from \"@material-ui/core\";\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     width: \"100%\",\n//     height: 400,\n//     maxWidth: 300,\n//     backgroundColor: theme.palette.background.paper,\n//   },\n// }));\n// function renderRow(props) {\n//   const { index, style } = props;\n//   return (\n//     <ListItem button style={style} key={index}>\n//       <ListItemText primary={`Item ${index + 1}`} />\n//     </ListItem>\n//   );\n// }\n// renderRow.propTypes = {\n//   index: PropTypes.number.isRequired,\n//   style: PropTypes.object.isRequired,\n// };\n\nexport default function TeamListView({\n  teams = []\n}) {\n  const columns = [{\n    title: \"Name\",\n    field: \"name\"\n  }]; // const classes = useStyles();\n\n  return /*#__PURE__*/React.createElement(List, {\n    list: teams,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }) // <div className={classes.root}>\n  //   <FixedSizeList\n  //     height={400}\n  //     width={300}\n  //     itemSize={46}\n  //     itemCount={teams.length}\n  //   >\n  //     {renderRow}\n  //   </FixedSizeList>\n  // </div>\n  ;\n}\n\nconst List = ({\n  list\n}) => {\n  if (list.length > 0) {\n    return /*#__PURE__*/React.createElement(MuiList, {\n      dense: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, list.map((item, index) => /*#__PURE__*/React.createElement(ListItemStyled, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextDiv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, item.text)), /*#__PURE__*/React.createElement(VersionDiv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, item.version)), /*#__PURE__*/React.createElement(StatusDiv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(StatusGreenDiv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, item.status)), \") : (\", /*#__PURE__*/React.createElement(StatusDiv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, item.status)), \")}\"))));\n  }\n\n  return /*#__PURE__*/React.createElement(PaddedDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"No items to display!\"));\n};\n\nList.propTypes = {\n  list: PropTypes.array\n}; // return (\n// <DataTypesPageStyled>\n//   <DataTypesListStyled>\n//     <MaterialTable\n//       title=\"Teams\"\n//       columns={columns}\n//       data={teams}\n//       options={{\n//         filtering: false,\n//         editable: false,\n//       }}\n// editable={{\n//   onRowUpdate: (newData, oldData) =>\n//     new Promise((resolve) => {\n//       setTimeout(() => {\n//         resolve();\n//         if (oldData) {\n//           onDataTypeEdit(newData);\n//         }\n//       }, 600);\n//     }),\n// }}\n//     />\n//     <Link to=\"/create_team\">\n//       <Button\n//         color=\"primary\"\n//         variant=\"contained\"\n//         type=\"submit\"\n//         data-testid=\"sign-up-button\"\n//       >\n//         Create New DataType\n//       </Button>\n//     </Link>\n//   </DataTypesListStyled>\n// </DataTypesPageStyled>\n// );\n// }\n\nconst DataTypesPageStyled = styled.div`\n  min-height: 100vh;\n`;\nconst DataTypesListStyled = styled.div`\n  display: grid;\n  gap: 20px;\n  text-align: right;\n  padding: 50px;\n  button {\n    height: 50px;\n    width: 250px;\n    padding: 20px;\n  }\n`;","map":{"version":3,"sources":["/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/teams/teamListView.component.js"],"names":["React","Button","Link","styled","PropTypes","makeStyles","ListItem","List","MuiList","ListItemText","FixedSizeList","MaterialTable","InputAdornment","Typography","SearchIcon","Alert","MuiCardStyled","CardContentStyled","OutlinedInputStyled","CardHeaderStyled","ListItemStyled","TextDiv","VersionDiv","StatusDiv","StatusGreenDiv","PaddedDiv","TeamListView","teams","columns","title","field","list","length","map","item","index","text","version","status","propTypes","array","DataTypesPageStyled","div","DataTypesListStyled"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from \"../button.component\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { List as MuiList } from \"@material-ui/core\";\n\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { FixedSizeList } from \"react-window\";\nimport MaterialTable from \"material-table\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {\n  MuiCardStyled,\n  CardContentStyled,\n  OutlinedInputStyled,\n  CardHeaderStyled,\n  ListItemStyled,\n  TextDiv,\n  VersionDiv,\n  StatusDiv,\n  StatusGreenDiv,\n  PaddedDiv,\n} from \"./styled\";\n// import { List as MuiList } from \"@material-ui/core\";\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     width: \"100%\",\n//     height: 400,\n//     maxWidth: 300,\n//     backgroundColor: theme.palette.background.paper,\n//   },\n// }));\n\n// function renderRow(props) {\n//   const { index, style } = props;\n\n//   return (\n//     <ListItem button style={style} key={index}>\n//       <ListItemText primary={`Item ${index + 1}`} />\n//     </ListItem>\n//   );\n// }\n\n// renderRow.propTypes = {\n//   index: PropTypes.number.isRequired,\n//   style: PropTypes.object.isRequired,\n// };\n\nexport default function TeamListView({ teams = [] }) {\n  const columns = [{ title: \"Name\", field: \"name\" }];\n\n  // const classes = useStyles();\n\n  return (\n    <List list={teams}></List>\n    // <div className={classes.root}>\n    //   <FixedSizeList\n    //     height={400}\n    //     width={300}\n    //     itemSize={46}\n    //     itemCount={teams.length}\n    //   >\n    //     {renderRow}\n    //   </FixedSizeList>\n    // </div>\n  );\n}\nconst List = ({ list }) => {\n  if (list.length > 0) {\n    return (\n      <MuiList dense={false}>\n        {list.map((item, index) => (\n          <ListItemStyled key={index}>\n            <TextDiv>\n              <Typography variant=\"body2\">{item.text}</Typography>\n            </TextDiv>\n            <VersionDiv>\n              <Typography variant=\"body2\">{item.version}</Typography>\n            </VersionDiv>\n            <StatusDiv>\n              <StatusGreenDiv>\n                <Typography variant=\"body2\">{item.status}</Typography>\n              </StatusGreenDiv>\n              ) : (\n              <StatusDiv>\n                <Typography variant=\"body2\">{item.status}</Typography>\n              </StatusDiv>\n              )}\n            </StatusDiv>\n          </ListItemStyled>\n        ))}\n      </MuiList>\n    );\n  }\n  return (\n    <PaddedDiv>\n      <Alert severity=\"info\">No items to display!</Alert>\n    </PaddedDiv>\n  );\n};\n\nList.propTypes = {\n  list: PropTypes.array,\n};\n\n// return (\n// <DataTypesPageStyled>\n//   <DataTypesListStyled>\n//     <MaterialTable\n//       title=\"Teams\"\n//       columns={columns}\n//       data={teams}\n//       options={{\n//         filtering: false,\n//         editable: false,\n//       }}\n\n// editable={{\n//   onRowUpdate: (newData, oldData) =>\n//     new Promise((resolve) => {\n//       setTimeout(() => {\n//         resolve();\n//         if (oldData) {\n//           onDataTypeEdit(newData);\n//         }\n//       }, 600);\n//     }),\n// }}\n//     />\n//     <Link to=\"/create_team\">\n//       <Button\n//         color=\"primary\"\n//         variant=\"contained\"\n//         type=\"submit\"\n//         data-testid=\"sign-up-button\"\n//       >\n//         Create New DataType\n//       </Button>\n//     </Link>\n//   </DataTypesListStyled>\n// </DataTypesPageStyled>\n// );\n// }\n\nconst DataTypesPageStyled = styled.div`\n  min-height: 100vh;\n`;\n\nconst DataTypesListStyled = styled.div`\n  display: grid;\n  gap: 20px;\n  text-align: right;\n  padding: 50px;\n  button {\n    height: 50px;\n    width: 250px;\n    padding: 20px;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}