{"ast":null,"code":"var _jsxFileName = \"/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/players/playersList.component.js\";\nimport React, { useState, useEffect } from \"react\";\nimport authHeader from \"../../services/auth-header\";\nimport PlayersListView from \"./playersListView.component\";\nimport { getPlayersByTeamId } from \"../../actions/player\";\nimport axios from \"axios\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { matchPath } from \"react-router\";\nexport function PlayersList(props) {\n  //   const test = useParams();\n  //   console.log(test);\n  const location = useLocation();\n  console.log(location);\n  const match = matchPath(location, {\n    path: \"/team/:teamId\",\n    exact: true,\n    strict: false\n  });\n  console.log(match);\n  const [playersLoaded, setPlayersLoaded] = useState(false);\n  const [players, setPlayers] = useState([]);\n  const [error, setError] = useState(null);\n  const logged = authHeader(); //   console.log(logged);\n\n  const setPeriodError = error => {\n    setError(error);\n    setTimeout(() => {\n      setError(null);\n    }, 4000);\n  };\n\n  const loadPlayers = async () => {\n    try {\n      if (!playersLoaded) {\n        setPlayersLoaded(true);\n        const config = {\n          headers: {\n            Authorization: `Bearer ${logged.token}`\n          }\n        };\n        const response = await axios.get(\"http://localhost:8080/api/user/\" + logged.id + \"/team/\" + \"123\" + \"/player\", config); // console.log(response);\n\n        console.log(response.data);\n        setPlayers(response.data);\n      }\n    } catch (err) {\n      setPeriodError(err);\n      setPlayersLoaded(false);\n    }\n  };\n\n  loadPlayers();\n  return /*#__PURE__*/React.createElement(PlayersListView, Object.assign({}, props, {\n    players: players,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }\n  }));\n} // TeamListView.defaultProps = {\n//   teams: [\n//     {\n//       name: \"Modena\",\n//     },\n//     {\n//       name: \"Trento\",\n//     },\n//   ],\n// };","map":{"version":3,"sources":["/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/players/playersList.component.js"],"names":["React","useState","useEffect","authHeader","PlayersListView","getPlayersByTeamId","axios","useParams","useLocation","matchPath","PlayersList","props","location","console","log","match","path","exact","strict","playersLoaded","setPlayersLoaded","players","setPlayers","error","setError","logged","setPeriodError","setTimeout","loadPlayers","config","headers","Authorization","token","response","get","id","data","err"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,kBAAvC;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACjC;AACA;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAMG,KAAK,GAAGN,SAAS,CAACG,QAAD,EAAW;AAChCI,IAAAA,IAAI,EAAE,eAD0B;AAEhCC,IAAAA,KAAK,EAAE,IAFyB;AAGhCC,IAAAA,MAAM,EAAE;AAHwB,GAAX,CAAvB;AAMAL,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AAEA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCnB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACsB,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMwB,MAAM,GAAGtB,UAAU,EAAzB,CAjBiC,CAkBjC;;AAEA,QAAMuB,cAAc,GAAIH,KAAD,IAAW;AAChCC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAI,IAAAA,UAAU,CAAC,MAAM;AACfH,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GALD;;AAMA,QAAMI,WAAW,GAAG,YAAY;AAC9B,QAAI;AACF,UAAI,CAACT,aAAL,EAAoB;AAClBC,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,cAAMS,MAAM,GAAG;AACbC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,aAAa,EAAG,UAASN,MAAM,CAACO,KAAM;AAAxC;AADI,SAAf;AAGA,cAAMC,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,GAAN,CACrB,oCACET,MAAM,CAACU,EADT,GAEE,QAFF,GAGE,KAHF,GAIE,SALmB,EAMrBN,MANqB,CAAvB,CALkB,CAalB;;AACAhB,QAAAA,OAAO,CAACC,GAAR,CAAYmB,QAAQ,CAACG,IAArB;AACAd,QAAAA,UAAU,CAACW,QAAQ,CAACG,IAAV,CAAV;AACD;AACF,KAlBD,CAkBE,OAAOC,GAAP,EAAY;AACZX,MAAAA,cAAc,CAACW,GAAD,CAAd;AACAjB,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,GAvBD;;AAwBAQ,EAAAA,WAAW;AAEX,sBAAO,oBAAC,eAAD,oBAAqBjB,KAArB;AAA4B,IAAA,OAAO,EAAEU,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport authHeader from \"../../services/auth-header\";\nimport PlayersListView from \"./playersListView.component\";\nimport { getPlayersByTeamId } from \"../../actions/player\";\nimport axios from \"axios\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { matchPath } from \"react-router\";\n\nexport function PlayersList(props) {\n  //   const test = useParams();\n  //   console.log(test);\n  const location = useLocation();\n  console.log(location);\n  const match = matchPath(location, {\n    path: \"/team/:teamId\",\n    exact: true,\n    strict: false,\n  });\n\n  console.log(match);\n\n  const [playersLoaded, setPlayersLoaded] = useState(false);\n  const [players, setPlayers] = useState([]);\n  const [error, setError] = useState(null);\n\n  const logged = authHeader();\n  //   console.log(logged);\n\n  const setPeriodError = (error) => {\n    setError(error);\n    setTimeout(() => {\n      setError(null);\n    }, 4000);\n  };\n  const loadPlayers = async () => {\n    try {\n      if (!playersLoaded) {\n        setPlayersLoaded(true);\n        const config = {\n          headers: { Authorization: `Bearer ${logged.token}` },\n        };\n        const response = await axios.get(\n          \"http://localhost:8080/api/user/\" +\n            logged.id +\n            \"/team/\" +\n            \"123\" +\n            \"/player\",\n          config\n        );\n        // console.log(response);\n        console.log(response.data);\n        setPlayers(response.data);\n      }\n    } catch (err) {\n      setPeriodError(err);\n      setPlayersLoaded(false);\n    }\n  };\n  loadPlayers();\n\n  return <PlayersListView {...props} players={players} />;\n}\n\n// TeamListView.defaultProps = {\n//   teams: [\n//     {\n//       name: \"Modena\",\n//     },\n//     {\n//       name: \"Trento\",\n//     },\n//   ],\n// };\n"]},"metadata":{},"sourceType":"module"}