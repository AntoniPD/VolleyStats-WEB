{"ast":null,"code":"var _jsxFileName = \"/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/teams/teamList.component.js\";\nimport React, { useState } from \"react\";\nimport authHeader from \"../../services/auth-header\";\nimport TeamListView from \"./teamListView.component\";\nimport axios from \"axios\";\nexport function TeamsList(props) {\n  const [teamsLoaded, setTeamsLoaded] = useState(false);\n  const [teams, setTeams] = useState([]);\n  const logged = authHeader();\n\n  const loadTeams = async () => {\n    try {\n      if (!teamsLoaded) {\n        setTeamsLoaded(true);\n        const config = {\n          headers: {\n            Authorization: `Bearer ${logged.token}`\n          }\n        };\n        const response = await axios(`/api/team/${logged.i}`, config);\n        console.log(response.data);\n        setTeams(response.data);\n      }\n    } catch (err) {\n      setPeriodError(err);\n      setTeamsLoaded(false);\n    }\n  };\n\n  loadTeams();\n  return /*#__PURE__*/React.createElement(TeamListView, Object.assign({}, props, {\n    teams: teams,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  }));\n}\n\nconst setPeriodError = error => {\n  setError(error);\n  setTimeout(() => {\n    setError(null);\n  }, 4000);\n};\n\nTeamsListView.defaultProps = {\n  teams: [{\n    name: \"Modena\"\n  }, {\n    name: \"Trento\"\n  }]\n};","map":{"version":3,"sources":["/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/teams/teamList.component.js"],"names":["React","useState","authHeader","TeamListView","axios","TeamsList","props","teamsLoaded","setTeamsLoaded","teams","setTeams","logged","loadTeams","config","headers","Authorization","token","response","i","console","log","data","err","setPeriodError","error","setError","setTimeout","TeamsListView","defaultProps","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAC/B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMU,MAAM,GAAGT,UAAU,EAAzB;;AAEA,QAAMU,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,UAAI,CAACL,WAAL,EAAkB;AAChBC,QAAAA,cAAc,CAAC,IAAD,CAAd;AACA,cAAMK,MAAM,GAAG;AAAEC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,aAAa,EAAG,UAASJ,MAAM,CAACK,KAAM;AAAxC;AAAX,SAAf;AACA,cAAMC,QAAQ,GAAG,MAAMb,KAAK,CAAE,aAAYO,MAAM,CAACO,CAAE,EAAvB,EAA0BL,MAA1B,CAA5B;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACAX,QAAAA,QAAQ,CAACO,QAAQ,CAACI,IAAV,CAAR;AACD;AACF,KARD,CAQE,OAAOC,GAAP,EAAY;AACZC,MAAAA,cAAc,CAACD,GAAD,CAAd;AACAd,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,GAbD;;AAeAI,EAAAA,SAAS;AACT,sBAAO,oBAAC,YAAD,oBAAkBN,KAAlB;AAAyB,IAAA,KAAK,EAAEG,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAED,MAAMc,cAAc,GAAIC,KAAD,IAAW;AAChCC,EAAAA,QAAQ,CAACD,KAAD,CAAR;AACAE,EAAAA,UAAU,CAAC,MAAM;AACfD,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFS,EAEP,IAFO,CAAV;AAGD,CALD;;AAOAE,aAAa,CAACC,YAAd,GAA6B;AAC3BnB,EAAAA,KAAK,EAAE,CACL;AACEoB,IAAAA,IAAI,EAAE;AADR,GADK,EAIL;AACEA,IAAAA,IAAI,EAAE;AADR,GAJK;AADoB,CAA7B","sourcesContent":["import React, { useState } from \"react\";\nimport authHeader from \"../../services/auth-header\";\nimport TeamListView from \"./teamListView.component\";\nimport axios from \"axios\";\n\nexport function TeamsList(props) {\n  const [teamsLoaded, setTeamsLoaded] = useState(false);\n  const [teams, setTeams] = useState([]);\n\n  const logged = authHeader();\n\n  const loadTeams = async () => {\n    try {\n      if (!teamsLoaded) {\n        setTeamsLoaded(true);\n        const config = { headers: { Authorization: `Bearer ${logged.token}` } };\n        const response = await axios(`/api/team/${logged.i}`, config);\n        console.log(response.data);\n        setTeams(response.data);\n      }\n    } catch (err) {\n      setPeriodError(err);\n      setTeamsLoaded(false);\n    }\n  };\n\n  loadTeams();\n  return <TeamListView {...props} teams={teams} />;\n}\n\nconst setPeriodError = (error) => {\n  setError(error);\n  setTimeout(() => {\n    setError(null);\n  }, 4000);\n};\n\nTeamsListView.defaultProps = {\n  teams: [\n    {\n      name: \"Modena\",\n    },\n    {\n      name: \"Trento\",\n    },\n  ],\n};\n"]},"metadata":{},"sourceType":"module"}