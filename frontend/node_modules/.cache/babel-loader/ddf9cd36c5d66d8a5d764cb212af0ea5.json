{"ast":null,"code":"var _jsxFileName = \"/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/teams/teamListView.component.js\";\n\n/**\n *\n * TeamListView\n *\n */\n// import SearchIcon from \"@material-ui/icons/Search\";\n// import Alert from \"@material-ui/lab/Alert\";\n// import { DocumentStatuses } from \"utils/enums\";\nimport React from \"react\";\nimport Button from \"../button.component\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport Edit from \"@material-ui/icons/Edit\"; // import { LockIcon } from \"@material-ui/icons\";\n\nimport MaterialTable from \"material-table\";\nexport default function TeamListView({\n  teams = [],\n  onUpdateTeam\n}) {\n  const columns = [{\n    title: \"Name\",\n    field: \"name\"\n  }]; //<Link to={`/team/${item._id}/info`} style={{ color: \"#000\" }}>\n\n  return /*#__PURE__*/React.createElement(PlayersPageStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PlayersListStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Teams\",\n    columns: columns,\n    data: teams,\n    editable: {\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            onUpdateTeam(newData);\n          }\n        }, 600);\n      })\n    },\n    onRowClick: (event, rowData) => {\n      console.log(\"asdds\"); // Get your id from rowData and use with link.\n      // return (\n      //   <Link\n      //     to={`/team/${rowData._id}/info`}\n      //     style={{ color: \"#000\" }}\n      //   ></Link>\n      // );\n\n      window.open(`team/${rowData._id}/info`); // event.stopPropagation();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: `/create_team`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    type: \"submit\",\n    \"data-testid\": \"sign-up-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Create New Team\"))));\n}\nconst PlayersPageStyled = styled.div`\n  min-height: 100vh;\n`;\nconst PlayersListStyled = styled.div`\n  display: grid;\n  gap: 20px;\n  text-align: right;\n  padding: 10px;\n  button {\n    height: 50px;\n    width: 250px;\n    padding: 20px;\n  }\n`; // const TeamListView = ({ teams, search = false }) => (\n//   <MuiCardStyled variant=\"outlined\">\n//     {\n//       <CardHeaderStyled\n//         title={<Typography variant=\"h3\">Your Teams </Typography>}\n//         action={<SearchAction search={search} />}\n//       />\n//     }\n//     <CardContentStyled>\n//       <List teams={teams} />\n//     </CardContentStyled>\n//   </MuiCardStyled>\n// );\n// TeamListView.propTypes = {\n//   search: PropTypes.bool,\n//   teams: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       text: PropTypes.string.isRequired,\n//       version: PropTypes.string,\n//       status: PropTypes.string,\n//     })\n//   ).isRequired,\n// };\n// const List = ({ teams }) => {\n//   console.log(teams);\n//   if (teams.length > 0) {\n//     // TODO: fix the link\n//     return (\n//       <MuiList dense={false}>\n//         {teams.map((item, index) => (\n//           <ListItemStyled key={index}>\n//             <Link to={`/team/${item._id}/info`} style={{ color: \"#000\" }}>\n//               <Typography\n//                 variant=\"body3\"\n//                 style={{\n//                   borderBottom: \"0.1em solid black\",\n//                   padding: \"0.5em\",\n//                 }}\n//               >\n//                 {item.name}\n//               </Typography>\n//             </Link>\n//           </ListItemStyled>\n//         ))}\n//       </MuiList>\n//     );\n//   }\n//   return (\n//     <PaddedDiv>\n//       {/* <Alert severity=\"info\">No items to display!</Alert> */}\n//     </PaddedDiv>\n//   );\n// };\n// List.propTypes = {\n//   teams: PropTypes.array,\n// };\n// const SearchAction = ({ search, handleInputChange }) =>\n//   search && (\n//     <div>\n//       <OutlinedInputStyled\n//         placeholder=\"Search...\"\n//         onChange={handleInputChange}\n//         startAdornment={<InputAdornment position=\"start\"></InputAdornment>}\n//       />\n//     </div>\n//   );\n// SearchAction.propTypes = {\n//   search: PropTypes.bool,\n//   handleInputChange: PropTypes.func,\n// };\n// export default TeamListView;\n// import React from \"react\";\n// import Button from \"../button.component\";\n// import { Link } from \"react-router-dom\";\n// import styled from \"styled-components\";\n// import PropTypes from \"prop-types\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import ListItem from \"@material-ui/core/ListItem\";\n// import { List as MuiList } from \"@material-ui/core\";\n// import ListItemText from \"@material-ui/core/ListItemText\";\n// import { FixedSizeList } from \"react-window\";\n// import MaterialTable from \"material-table\";\n// import InputAdornment from \"@material-ui/core/InputAdornment\";\n// import Typography from \"@material-ui/core/Typography\";\n// import SearchIcon from \"@material-ui/icons/Search\";\n// import Alert from \"@material-ui/lab/Alert\";\n// import {\n//   MuiCardStyled,\n//   CardContentStyled,\n//   OutlinedInputStyled,\n//   CardHeaderStyled,\n//   ListItemStyled,\n//   TextDiv,\n//   VersionDiv,\n//   StatusDiv,\n//   StatusGreenDiv,\n//   PaddedDiv,\n// } from \"./styled\";\n// // import { List as MuiList } from \"@material-ui/core\";\n// // const useStyles = makeStyles((theme) => ({\n// //   root: {\n// //     width: \"100%\",\n// //     height: 400,\n// //     maxWidth: 300,\n// //     backgroundColor: theme.palette.background.paper,\n// //   },\n// // }));\n// // function renderRow(props) {\n// //   const { index, style } = props;\n// //   return (\n// //     <ListItem button style={style} key={index}>\n// //       <ListItemText primary={`Item ${index + 1}`} />\n// //     </ListItem>\n// //   );\n// // }\n// // renderRow.propTypes = {\n// //   index: PropTypes.number.isRequired,\n// //   style: PropTypes.object.isRequired,\n// // };\n// export default function TeamListView({ teams = [] }) {\n//   const columns = [{ title: \"Name\", field: \"name\" }];\n//   // const classes = useStyles();\n//   return (\n//     <List teams={teams}></List>\n//     // <div className={classes.root}>\n//     //   <FixedSizeList\n//     //     height={400}\n//     //     width={300}\n//     //     itemSize={46}\n//     //     itemCount={teams.length}\n//     //   >\n//     //     {renderRow}\n//     //   </FixedSizeList>\n//     // </div>\n//   );\n// }\n// const List = ({ list }) => {\n//   if (list.length > 0) {\n//     return (\n//       <MuiList dense={false}>\n//         {list.map((item, index) => (\n//           <ListItemStyled key={index}>\n//             <TextDiv>\n//               <Typography variant=\"body2\">{item.text}</Typography>\n//             </TextDiv>\n//             <VersionDiv>\n//               <Typography variant=\"body2\">{item.version}</Typography>\n//             </VersionDiv>\n//             <StatusDiv>\n//               <StatusGreenDiv>\n//                 <Typography variant=\"body2\">{item.status}</Typography>\n//               </StatusGreenDiv>\n//               ) : (\n//               <StatusDiv>\n//                 <Typography variant=\"body2\">{item.status}</Typography>\n//               </StatusDiv>\n//             </StatusDiv>\n//           </ListItemStyled>\n//         ))}\n//       </MuiList>\n//     );\n//   }\n//   return (\n//     <PaddedDiv>\n//       <Alert severity=\"info\">No items to display!</Alert>\n//     </PaddedDiv>\n//   );\n// };\n// List.propTypes = {\n//   list: PropTypes.array,\n// };\n// // return (\n// // <DataTypesPageStyled>\n// //   <DataTypesListStyled>\n// //     <MaterialTable\n// //       title=\"Teams\"\n// //       columns={columns}\n// //       data={teams}\n// //       options={{\n// //         filtering: false,\n// //         editable: false,\n// //       }}\n// // editable={{\n// //   onRowUpdate: (newData, oldData) =>\n// //     new Promise((resolve) => {\n// //       setTimeout(() => {\n// //         resolve();\n// //         if (oldData) {\n// //           onDataTypeEdit(newData);\n// //         }\n// //       }, 600);\n// //     }),\n// // }}\n// //     />\n// //     <Link to=\"/create_team\">\n// //       <Button\n// //         color=\"primary\"\n// //         variant=\"contained\"\n// //         type=\"submit\"\n// //         data-testid=\"sign-up-button\"\n// //       >\n// //         Create New DataType\n// //       </Button>\n// //     </Link>\n// //   </DataTypesListStyled>\n// // </DataTypesPageStyled>\n// // );\n// // }\n// const DataTypesPageStyled = styled.div`\n//   min-height: 100vh;\n// `;\n// const DataTypesListStyled = styled.div`\n//   display: grid;\n//   gap: 20px;\n//   text-align: right;\n//   padding: 50px;\n//   button {\n//     height: 50px;\n//     width: 250px;\n//     padding: 20px;\n//   }\n// `;","map":{"version":3,"sources":["/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/teams/teamListView.component.js"],"names":["React","Button","Link","styled","PropTypes","Edit","MaterialTable","TeamListView","teams","onUpdateTeam","columns","title","field","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","event","rowData","console","log","window","open","_id","PlayersPageStyled","div","PlayersListStyled"],"mappings":";;AAAA;;;;;AAMA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,yBAAjB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA,KAAK,GAAG,EAAV;AAAcC,EAAAA;AAAd,CAAtB,EAAoD;AACjE,QAAMC,OAAO,GAAG,CAAC;AAAEC,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAAD,CAAhB,CADiE,CAEjE;;AACA,sBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,OAAO,EAAEF,OAFX;AAGE,IAAA,IAAI,EAAEF,KAHR;AAIE,IAAA,QAAQ,EAAE;AACRK,MAAAA,WAAW,EAAE,CAACC,OAAD,EAAUC,OAAV,KACX,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACvBC,QAAAA,UAAU,CAAC,MAAM;AACfD,UAAAA,OAAO;;AACP,cAAIF,OAAJ,EAAa;AACXN,YAAAA,YAAY,CAACK,OAAD,CAAZ;AACD;AACF,SALS,EAKP,GALO,CAAV;AAMD,OAPD;AAFM,KAJZ;AAeE,IAAA,UAAU,EAAE,CAACK,KAAD,EAAQC,OAAR,KAAoB;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAD8B,CAE9B;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAa,QAAOJ,OAAO,CAACK,GAAI,OAAhC,EAT8B,CAU9B;AACD,KA1BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eA6BE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,mBAAY,gBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CA7BF,CADF,CADF;AA4CD;AAED,MAAMC,iBAAiB,GAAGvB,MAAM,CAACwB,GAAI;;CAArC;AAIA,MAAMC,iBAAiB,GAAGzB,MAAM,CAACwB,GAAI;;;;;;;;;;CAArsourcesContent":["/**\n *\n * TeamListView\n *\n */\n\n// import SearchIcon from \"@material-ui/icons/Search\";\n// import Alert from \"@material-ui/lab/Alert\";\n\n// import { DocumentStatuses } from \"utils/enums\";\n\nimport React from \"react\";\nimport Button from \"../button.component\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport PropTypes from \"prop-types\";\nimport Edit from \"@material-ui/icons/Edit\";\n// import { LockIcon } from \"@material-ui/icons\";\nimport MaterialTable from \"material-table\";\n\nexport default function TeamListView({ teams = [], onUpdateTeam }) {\n  const columns = [{ title: \"Name\", field: \"name\" }];\n  //<Link to={`/team/${item._id}/info`} style={{ color: \"#000\" }}>\n  return (\n    <PlayersPageStyled>\n      <PlayersListStyled>\n        <MaterialTable\n          title=\"Teams\"\n          columns={columns}\n          data={teams}\n          editable={{\n            onRowUpdate: (newData, oldData) =>\n              new Promise((resolve) => {\n                setTimeout(() => {\n                  resolve();\n                  if (oldData) {\n                    onUpdateTeam(newData);\n                  }\n                }, 600);\n              }),\n          }}\n          onRowClick={(event, rowData) => {\n            console.log(\"asdds\");\n            // Get your id from rowData and use with link.\n            // return (\n            //   <Link\n            //     to={`/team/${rowData._id}/info`}\n            //     style={{ color: \"#000\" }}\n            //   ></Link>\n            // );\n            window.open(`team/${rowData._id}/info`);\n            // event.stopPropagation();\n          }}\n        />\n        <Link to={`/create_team`}>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            type=\"submit\"\n            data-testid=\"sign-up-button\"\n          >\n            Create New Team\n          </Button>\n        </Link>\n      </PlayersListStyled>\n    </PlayersPageStyled>\n  );\n}\n\nconst PlayersPageStyled = styled.div`\n  min-height: 100vh;\n`;\n\nconst PlayersListStyled = styled.div`\n  display: grid;\n  gap: 20px;\n  text-align: right;\n  padding: 10px;\n  button {\n    height: 50px;\n    width: 250px;\n    padding: 20px;\n  }\n`;\n\n// const TeamListView = ({ teams, search = false }) => (\n//   <MuiCardStyled variant=\"outlined\">\n//     {\n//       <CardHeaderStyled\n//         title={<Typography variant=\"h3\">Your Teams </Typography>}\n//         action={<SearchAction search={search} />}\n//       />\n//     }\n//     <CardContentStyled>\n//       <List teams={teams} />\n//     </CardContentStyled>\n//   </MuiCardStyled>\n// );\n\n// TeamListView.propTypes = {\n//   search: PropTypes.bool,\n//   teams: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       text: PropTypes.string.isRequired,\n//       version: PropTypes.string,\n//       status: PropTypes.string,\n//     })\n//   ).isRequired,\n// };\n\n// const List = ({ teams }) => {\n//   console.log(teams);\n//   if (teams.length > 0) {\n//     // TODO: fix the link\n//     return (\n//       <MuiList dense={false}>\n//         {teams.map((item, index) => (\n//           <ListItemStyled key={index}>\n//             <Link to={`/team/${item._id}/info`} style={{ color: \"#000\" }}>\n//               <Typography\n//                 variant=\"body3\"\n//                 style={{\n//                   borderBottom: \"0.1em solid black\",\n//                   padding: \"0.5em\",\n//                 }}\n//               >\n//                 {item.name}\n//               </Typography>\n//             </Link>\n//           </ListItemStyled>\n//         ))}\n//       </MuiList>\n//     );\n//   }\n//   return (\n//     <PaddedDiv>\n//       {/* <Alert severity=\"info\">No items to display!</Alert> */}\n//     </PaddedDiv>\n//   );\n// };\n\n// List.propTypes = {\n//   teams: PropTypes.array,\n// };\n\n// const SearchAction = ({ search, handleInputChange }) =>\n//   search && (\n//     <div>\n//       <OutlinedInputStyled\n//         placeholder=\"Search...\"\n//         onChange={handleInputChange}\n//         startAdornment={<InputAdornment position=\"start\"></InputAdornment>}\n//       />\n//     </div>\n//   );\n\n// SearchAction.propTypes = {\n//   search: PropTypes.bool,\n//   handleInputChange: PropTypes.func,\n// };\n\n// export default TeamListView;\n\n// import React from \"react\";\n// import Button from \"../button.component\";\n// import { Link } from \"react-router-dom\";\n// import styled from \"styled-components\";\n\n// import PropTypes from \"prop-types\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import ListItem from \"@material-ui/core/ListItem\";\n// import { List as MuiList } from \"@material-ui/core\";\n\n// import ListItemText from \"@material-ui/core/ListItemText\";\n// import { FixedSizeList } from \"react-window\";\n// import MaterialTable from \"material-table\";\n// import InputAdornment from \"@material-ui/core/InputAdornment\";\n// import Typography from \"@material-ui/core/Typography\";\n// import SearchIcon from \"@material-ui/icons/Search\";\n// import Alert from \"@material-ui/lab/Alert\";\n// import {\n//   MuiCardStyled,\n//   CardContentStyled,\n//   OutlinedInputStyled,\n//   CardHeaderStyled,\n//   ListItemStyled,\n//   TextDiv,\n//   VersionDiv,\n//   StatusDiv,\n//   StatusGreenDiv,\n//   PaddedDiv,\n// } from \"./styled\";\n// // import { List as MuiList } from \"@material-ui/core\";\n\n// // const useStyles = makeStyles((theme) => ({\n// //   root: {\n// //     width: \"100%\",\n// //     height: 400,\n// //     maxWidth: 300,\n// //     backgroundColor: theme.palette.background.paper,\n// //   },\n// // }));\n\n// // function renderRow(props) {\n// //   const { index, style } = props;\n\n// //   return (\n// //     <ListItem button style={style} key={index}>\n// //       <ListItemText primary={`Item ${index + 1}`} />\n// //     </ListItem>\n// //   );\n// // }\n\n// // renderRow.propTypes = {\n// //   index: PropTypes.number.isRequired,\n// //   style: PropTypes.object.isRequired,\n// // };\n\n// export default function TeamListView({ teams = [] }) {\n//   const columns = [{ title: \"Name\", field: \"name\" }];\n\n//   // const classes = useStyles();\n\n//   return (\n//     <List teams={teams}></List>\n//     // <div className={classes.root}>\n//     //   <FixedSizeList\n//     //     height={400}\n//     //     width={300}\n//     //     itemSize={46}\n//     //     itemCount={teams.length}\n//     //   >\n//     //     {renderRow}\n//     //   </FixedSizeList>\n//     // </div>\n//   );\n// }\n// const List = ({ list }) => {\n//   if (list.length > 0) {\n//     return (\n//       <MuiList dense={false}>\n//         {list.map((item, index) => (\n//           <ListItemStyled key={index}>\n//             <TextDiv>\n//               <Typography variant=\"body2\">{item.text}</Typography>\n//             </TextDiv>\n//             <VersionDiv>\n//               <Typography variant=\"body2\">{item.version}</Typography>\n//             </VersionDiv>\n//             <StatusDiv>\n//               <StatusGreenDiv>\n//                 <Typography variant=\"body2\">{item.status}</Typography>\n//               </StatusGreenDiv>\n//               ) : (\n//               <StatusDiv>\n//                 <Typography variant=\"body2\">{item.status}</Typography>\n//               </StatusDiv>\n//             </StatusDiv>\n//           </ListItemStyled>\n//         ))}\n//       </MuiList>\n//     );\n//   }\n//   return (\n//     <PaddedDiv>\n//       <Alert severity=\"info\">No items to display!</Alert>\n//     </PaddedDiv>\n//   );\n// };\n\n// List.propTypes = {\n//   list: PropTypes.array,\n// };\n\n// // return (\n// // <DataTypesPageStyled>\n// //   <DataTypesListStyled>\n// //     <MaterialTable\n// //       title=\"Teams\"\n// //       columns={columns}\n// //       data={teams}\n// //       options={{\n// //         filtering: false,\n// //         editable: false,\n// //       }}\n\n// // editable={{\n// //   onRowUpdate: (newData, oldData) =>\n// //     new Promise((resolve) => {\n// //       setTimeout(() => {\n// //         resolve();\n// //         if (oldData) {\n// //           onDataTypeEdit(newData);\n// //         }\n// //       }, 600);\n// //     }),\n// // }}\n// //     />\n// //     <Link to=\"/create_team\">\n// //       <Button\n// //         color=\"primary\"\n// //         variant=\"contained\"\n// //         type=\"submit\"\n// //         data-testid=\"sign-up-button\"\n// //       >\n// //         Create New DataType\n// //       </Button>\n// //     </Link>\n// //   </DataTypesListStyled>\n// // </DataTypesPageStyled>\n// // );\n// // }\n\n// const DataTypesPageStyled = styled.div`\n//   min-height: 100vh;\n// `;\n\n// const DataTypesListStyled = styled.div`\n//   display: grid;\n//   gap: 20px;\n//   text-align: right;\n//   padding: 50px;\n//   button {\n//     height: 50px;\n//     width: 250px;\n//     padding: 20px;\n//   }\n// `;\n"]},"metadata":{},"sourceType":"module"}