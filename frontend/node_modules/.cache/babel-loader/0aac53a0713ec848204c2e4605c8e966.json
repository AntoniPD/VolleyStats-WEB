{"ast":null,"code":"var _jsxFileName = \"/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/profile.component.js\";\n// import React, { Component } from \"react\";\n// import { Redirect } from \"react-router-dom\";\n// import { connect } from \"react-redux\";\n// class Profile extends Component {\n//   render() {\n//     const { user: currentUser } = this.props;\n//     if (!currentUser) {\n//       return <Redirect to=\"/login\" />;\n//     }\n//     return (\n//       <div className=\"container\">\n//         <header className=\"jumbotron\">\n//           <h3>\n//             <strong>{currentUser.name}</strong> Profile\n//           </h3>\n//         </header>\n//         <p>\n//           <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n//           {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n//         </p>\n//         <p>\n//           <strong>Id:</strong> {currentUser.id}\n//         </p>\n//         <p>\n//           <strong>Email:</strong> {currentUser.username}\n//         </p>\n//         <strong>Authorities:</strong>\n//         <ul>\n//           {currentUser.roles &&\n//             currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n//         </ul>\n//       </div>\n//     );\n//   }\n// }\n// function mapStateToProps(state) {\n//   const { user } = state.auth;\n//   return {\n//     user,\n//   };\n// }\n// export default connect(mapStateToProps)(Profile);\nimport React, { Fragment } from \"react\";\nimport { Header } from \"semantic-ui-react\";\nimport { MDBBtn, MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\n\nconst Profile = props => {\n  const columns = [{\n    label: \"Name\",\n    field: \"name\",\n    sort: \"asc\"\n  }, {\n    label: \"Spikes\",\n    field: \"spikes\",\n    sort: \"asc\"\n  }, {\n    label: \"Blocks\",\n    field: \"blocks\",\n    sort: \"asc\"\n  }, {\n    label: \"SpikeErrors\",\n    field: \"spikeErrors\",\n    sort: \"asc\"\n  }, {\n    label: \"blockErrors\",\n    field: \"blockErrors\",\n    sort: \"asc\"\n  }, {\n    label: \"ServerErrors\",\n    field: \"serveErrors\",\n    sort: \"asc\"\n  }, {\n    label: \"ReceiveErrors\",\n    field: \"receiveErrors\",\n    sort: \"asc\"\n  }, {\n    label: \"Aces\",\n    field: \"aces\",\n    sort: \"asc\"\n  }, {\n    label: \"Attempts\",\n    field: \"attempts\",\n    sort: \"asc\"\n  }];\n  const rows_rounded_btn = [{\n    name: \"Ivan\",\n    first: [/*#__PURE__*/React.createElement(MDBBtn, {\n      color: \"default\",\n      rounded: true,\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, \"+\"), /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, \"Points\"), /*#__PURE__*/React.createElement(MDBBtn, {\n      color: \"default\",\n      rounded: true,\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, \"-\")],\n    last: \"Otto\",\n    handle: \"@mdo\"\n  }, {\n    name: \"Spas\",\n    first: \"Jacob\",\n    last: /*#__PURE__*/React.createElement(MDBBtn, {\n      color: \"default\",\n      rounded: true,\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, \"Button\"),\n    handle: \"@fat\"\n  }, {\n    name: \"sder\",\n    first: \"Larry\",\n    last: \"the Bird\",\n    handle: /*#__PURE__*/React.createElement(MDBBtn, {\n      color: \"default\",\n      rounded: true,\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, \"Button\")\n  }];\n  return [[\n  /*#__PURE__*/\n  // [<h2>Nie</h2>, <h1>2</h1>],\n  React.createElement(Header, {\n    as: \"h1\",\n    floated: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, \"Nie 3 : 2 Te\"), /*#__PURE__*/React.createElement(Header, {\n    as: \"h1\",\n    floated: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, \"Overall Statistics\")], /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, \"Players Statistics\"), /*#__PURE__*/React.createElement(MDBTable, {\n    btn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MDBTableHead, {\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MDBTableBody, {\n    rows: rows_rounded_btn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, \"Overall Statistics\"), /*#__PURE__*/React.createElement(MDBTable, {\n    btn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MDBTableHead, {\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MDBTableBody, {\n    rows: rows_rounded_btn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }))];\n};\n\nexport default Profile;","map":{"version":3,"sources":["/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/profile.component.js"],"names":["React","Fragment","Header","MDBBtn","MDBTable","MDBTableBody","MDBTableHead","Profile","props","columns","label","field","sort","rows_rounded_btn","name","first","last","handle"],"mappings":"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","sourcesContent":["// import React, { Component } from \"react\";\n// import { Redirect } from \"react-router-dom\";\n// import { connect } from \"react-redux\";\n\n// class Profile extends Component {\n//   render() {\n//     const { user: currentUser } = this.props;\n\n//     if (!currentUser) {\n//       return <Redirect to=\"/login\" />;\n//     }\n\n//     return (\n//       <div className=\"container\">\n//         <header className=\"jumbotron\">\n//           <h3>\n//             <strong>{currentUser.name}</strong> Profile\n//           </h3>\n//         </header>\n//         <p>\n//           <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n//           {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n//         </p>\n//         <p>\n//           <strong>Id:</strong> {currentUser.id}\n//         </p>\n//         <p>\n//           <strong>Email:</strong> {currentUser.username}\n//         </p>\n//         <strong>Authorities:</strong>\n//         <ul>\n//           {currentUser.roles &&\n//             currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n//         </ul>\n//       </div>\n//     );\n//   }\n// }\n\n// function mapStateToProps(state) {\n//   const { user } = state.auth;\n//   return {\n//     user,\n//   };\n// }\n\n// export default connect(mapStateToProps)(Profile);\n\nimport React, { Fragment } from \"react\";\nimport { Header } from \"semantic-ui-react\";\nimport { MDBBtn, MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\";\n\nconst Profile = (props) => {\n  const columns = [\n    {\n      label: \"Name\",\n      field: \"name\",\n      sort: \"asc\",\n    },\n    {\n      label: \"Spikes\",\n      field: \"spikes\",\n      sort: \"asc\",\n    },\n    {\n      label: \"Blocks\",\n      field: \"blocks\",\n      sort: \"asc\",\n    },\n    {\n      label: \"SpikeErrors\",\n      field: \"spikeErrors\",\n      sort: \"asc\",\n    },\n    {\n      label: \"blockErrors\",\n      field: \"blockErrors\",\n      sort: \"asc\",\n    },\n    {\n      label: \"ServerErrors\",\n      field: \"serveErrors\",\n      sort: \"asc\",\n    },\n    {\n      label: \"ReceiveErrors\",\n      field: \"receiveErrors\",\n      sort: \"asc\",\n    },\n    {\n      label: \"Aces\",\n      field: \"aces\",\n      sort: \"asc\",\n    },\n    {\n      label: \"Attempts\",\n      field: \"attempts\",\n      sort: \"asc\",\n    },\n  ];\n\n  const rows_rounded_btn = [\n    {\n      name: \"Ivan\",\n      first: [\n        <MDBBtn color=\"default\" rounded size=\"sm\">\n          +\n        </MDBBtn>,\n        <Fragment>Points</Fragment>,\n        <MDBBtn color=\"default\" rounded size=\"sm\">\n          -\n        </MDBBtn>,\n      ],\n      last: \"Otto\",\n      handle: \"@mdo\",\n    },\n    {\n      name: \"Spas\",\n      first: \"Jacob\",\n      last: (\n        <MDBBtn color=\"default\" rounded size=\"sm\">\n          Button\n        </MDBBtn>\n      ),\n      handle: \"@fat\",\n    },\n    {\n      name: \"sder\",\n      first: \"Larry\",\n      last: \"the Bird\",\n      handle: (\n        <MDBBtn color=\"default\" rounded size=\"sm\">\n          Button\n        </MDBBtn>\n      ),\n    },\n  ];\n\n  return [\n    [\n      // [<h2>Nie</h2>, <h1>2</h1>],\n      <Header as=\"h1\" floated=\"left\">\n        Nie 3 : 2 Te\n      </Header>,\n      <Header as=\"h1\" floated=\"right\">\n        Overall Statistics\n      </Header>,\n    ],\n    <Fragment>Players Statistics</Fragment>,\n    <MDBTable btn>\n      <MDBTableHead columns={columns} />\n      <MDBTableBody rows={rows_rounded_btn} />\n    </MDBTable>,\n    <Fragment>Overall Statistics</Fragment>,\n    <MDBTable btn>\n      <MDBTableHead columns={columns} />\n      <MDBTableBody rows={rows_rounded_btn} />\n    </MDBTable>,\n  ];\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}