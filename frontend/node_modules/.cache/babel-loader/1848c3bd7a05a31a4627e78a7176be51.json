{"ast":null,"code":"import TeamService from \"../services/team.service\";\nexport const createTeam = (name, token) => dispatch => {\n  return TeamService.createTeam(name, token).then(response => {\n    dispatch({\n      type: REGISTER_TEAM_SUCCESS\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: response.data.message\n    });\n    return Promise.resolve();\n  }, error => {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    dispatch({\n      type: REGISTER_TEAM_FAIL\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: message\n    });\n    return Promise.reject();\n  });\n};","map":{"version":3,"sources":["/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/actions/team.js"],"names":["TeamService","createTeam","name","token","dispatch","then","response","type","REGISTER_TEAM_SUCCESS","SET_MESSAGE","payload","data","message","Promise","resolve","error","toString","REGISTER_TEAM_FAIL","reject"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,0BAAxB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAkBC,QAAD,IAAc;AACvD,SAAOJ,WAAW,CAACC,UAAZ,CAAuBC,IAAvB,EAA6BC,KAA7B,EAAoCE,IAApC,CACJC,QAAD,IAAc;AACZF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEC;AADC,KAAD,CAAR;AAIAJ,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEE,WADC;AAEPC,MAAAA,OAAO,EAAEJ,QAAQ,CAACK,IAAT,CAAcC;AAFhB,KAAD,CAAR;AAKA,WAAOC,OAAO,CAACC,OAAR,EAAP;AACD,GAZI,EAaJC,KAAD,IAAW;AACT,UAAMH,OAAO,GACVG,KAAK,CAACT,QAAN,IACCS,KAAK,CAACT,QAAN,CAAeK,IADhB,IAECI,KAAK,CAACT,QAAN,CAAeK,IAAf,CAAoBC,OAFtB,IAGAG,KAAK,CAACH,OAHN,IAIAG,KAAK,CAACC,QAAN,EALF;AAOAZ,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEU;AADC,KAAD,CAAR;AAIAb,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEE,WADC;AAEPC,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAKA,WAAOC,OAAO,CAACK,MAAR,EAAP;AACD,GA/BI,CAAP;AAiCD,CAlCM","sourcesContent":["import TeamService from \"../services/team.service\";\n\nexport const createTeam = (name, token) => (dispatch) => {\n  return TeamService.createTeam(name, token).then(\n    (response) => {\n      dispatch({\n        type: REGISTER_TEAM_SUCCESS,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: response.data.message,\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: REGISTER_TEAM_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n"]},"metadata":{},"sourceType":"module"}