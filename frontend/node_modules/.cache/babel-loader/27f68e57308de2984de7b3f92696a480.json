{"ast":null,"code":"var _jsxFileName = \"/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/teams/teamListView.component.js\";\n\n/**\n *\n * TeamListView\n *\n */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List as MuiList } from \"@material-ui/core\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Typography from \"@material-ui/core/Typography\"; // import SearchIcon from \"@material-ui/icons/Search\";\n// import Alert from \"@material-ui/lab/Alert\";\n\nimport { DocumentStatuses } from \"utils/enums\";\nimport { MuiCardStyled, CardContentStyled, OutlinedInputStyled, CardHeaderStyled, ListItemStyled, TextDiv, VersionDiv, StatusDiv, StatusGreenDiv, PaddedDiv } from \"./styled\";\n\nconst TeamListView = ({\n  list,\n  search = false\n}) => /*#__PURE__*/React.createElement(MuiCardStyled, {\n  variant: \"outlined\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(CardHeaderStyled, {\n  title: /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }\n  }),\n  action: /*#__PURE__*/React.createElement(SearchAction, {\n    search: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(CardContentStyled, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(List, {\n  list: list,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }\n})));\n\nTeamListView.propTypes = {\n  search: PropTypes.bool,\n  list: PropTypes.arrayOf(PropTypes.shape({\n    text: PropTypes.string.isRequired,\n    version: PropTypes.string,\n    status: PropTypes.string\n  })).isRequired\n};\n\nconst List = ({\n  list\n}) => {\n  if (list.length > 0) {\n    return /*#__PURE__*/React.createElement(MuiList, {\n      dense: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, list.map((item, index) => /*#__PURE__*/React.createElement(ListItemStyled, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextDiv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, item.text)), /*#__PURE__*/React.createElement(VersionDiv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, item.version)), /*#__PURE__*/React.createElement(StatusDiv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, item.status === DocumentStatuses.PUBLISHED ? /*#__PURE__*/React.createElement(StatusGreenDiv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }\n    }, item.status)) : /*#__PURE__*/React.createElement(StatusDiv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }, item.status))))));\n  }\n\n  return /*#__PURE__*/React.createElement(PaddedDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"No items to display!\"));\n};\n\nList.propTypes = {\n  list: PropTypes.array\n};\n\nconst SearchAction = ({\n  search,\n  handleInputChange\n}) => search && /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(OutlinedInputStyled, {\n  placeholder: \"Search...\",\n  onChange: handleInputChange,\n  startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n    position: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 7\n  }\n}));\n\nSearchAction.propTypes = {\n  search: PropTypes.bool,\n  handleInputChange: PropTypes.func\n};\nexport default TeamListView; // import React from \"react\";\n// import Button from \"../button.component\";\n// import { Link } from \"react-router-dom\";\n// import styled from \"styled-components\";\n// import PropTypes from \"prop-types\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import ListItem from \"@material-ui/core/ListItem\";\n// import { List as MuiList } from \"@material-ui/core\";\n// import ListItemText from \"@material-ui/core/ListItemText\";\n// import { FixedSizeList } from \"react-window\";\n// import MaterialTable from \"material-table\";\n// import InputAdornment from \"@material-ui/core/InputAdornment\";\n// import Typography from \"@material-ui/core/Typography\";\n// import SearchIcon from \"@material-ui/icons/Search\";\n// import Alert from \"@material-ui/lab/Alert\";\n// import {\n//   MuiCardStyled,\n//   CardContentStyled,\n//   OutlinedInputStyled,\n//   CardHeaderStyled,\n//   ListItemStyled,\n//   TextDiv,\n//   VersionDiv,\n//   StatusDiv,\n//   StatusGreenDiv,\n//   PaddedDiv,\n// } from \"./styled\";\n// // import { List as MuiList } from \"@material-ui/core\";\n// // const useStyles = makeStyles((theme) => ({\n// //   root: {\n// //     width: \"100%\",\n// //     height: 400,\n// //     maxWidth: 300,\n// //     backgroundColor: theme.palette.background.paper,\n// //   },\n// // }));\n// // function renderRow(props) {\n// //   const { index, style } = props;\n// //   return (\n// //     <ListItem button style={style} key={index}>\n// //       <ListItemText primary={`Item ${index + 1}`} />\n// //     </ListItem>\n// //   );\n// // }\n// // renderRow.propTypes = {\n// //   index: PropTypes.number.isRequired,\n// //   style: PropTypes.object.isRequired,\n// // };\n// export default function TeamListView({ teams = [] }) {\n//   const columns = [{ title: \"Name\", field: \"name\" }];\n//   // const classes = useStyles();\n//   return (\n//     <List list={teams}></List>\n//     // <div className={classes.root}>\n//     //   <FixedSizeList\n//     //     height={400}\n//     //     width={300}\n//     //     itemSize={46}\n//     //     itemCount={teams.length}\n//     //   >\n//     //     {renderRow}\n//     //   </FixedSizeList>\n//     // </div>\n//   );\n// }\n// const List = ({ list }) => {\n//   if (list.length > 0) {\n//     return (\n//       <MuiList dense={false}>\n//         {list.map((item, index) => (\n//           <ListItemStyled key={index}>\n//             <TextDiv>\n//               <Typography variant=\"body2\">{item.text}</Typography>\n//             </TextDiv>\n//             <VersionDiv>\n//               <Typography variant=\"body2\">{item.version}</Typography>\n//             </VersionDiv>\n//             <StatusDiv>\n//               <StatusGreenDiv>\n//                 <Typography variant=\"body2\">{item.status}</Typography>\n//               </StatusGreenDiv>\n//               ) : (\n//               <StatusDiv>\n//                 <Typography variant=\"body2\">{item.status}</Typography>\n//               </StatusDiv>\n//             </StatusDiv>\n//           </ListItemStyled>\n//         ))}\n//       </MuiList>\n//     );\n//   }\n//   return (\n//     <PaddedDiv>\n//       <Alert severity=\"info\">No items to display!</Alert>\n//     </PaddedDiv>\n//   );\n// };\n// List.propTypes = {\n//   list: PropTypes.array,\n// };\n// // return (\n// // <DataTypesPageStyled>\n// //   <DataTypesListStyled>\n// //     <MaterialTable\n// //       title=\"Teams\"\n// //       columns={columns}\n// //       data={teams}\n// //       options={{\n// //         filtering: false,\n// //         editable: false,\n// //       }}\n// // editable={{\n// //   onRowUpdate: (newData, oldData) =>\n// //     new Promise((resolve) => {\n// //       setTimeout(() => {\n// //         resolve();\n// //         if (oldData) {\n// //           onDataTypeEdit(newData);\n// //         }\n// //       }, 600);\n// //     }),\n// // }}\n// //     />\n// //     <Link to=\"/create_team\">\n// //       <Button\n// //         color=\"primary\"\n// //         variant=\"contained\"\n// //         type=\"submit\"\n// //         data-testid=\"sign-up-button\"\n// //       >\n// //         Create New DataType\n// //       </Button>\n// //     </Link>\n// //   </DataTypesListStyled>\n// // </DataTypesPageStyled>\n// // );\n// // }\n// const DataTypesPageStyled = styled.div`\n//   min-height: 100vh;\n// `;\n// const DataTypesListStyled = styled.div`\n//   display: grid;\n//   gap: 20px;\n//   text-align: right;\n//   padding: 50px;\n//   button {\n//     height: 50px;\n//     width: 250px;\n//     padding: 20px;\n//   }\n// `;","map":{"version":3,"sources":["/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/teams/teamListView.component.js"],"names":["React","PropTypes","List","MuiList","InputAdornment","Typography","DocumentStatuses","MuiCardStyled","CardContentStyled","OutlinedInputStyled","CardHeaderStyled","ListItemStyled","TextDiv","VersionDiv","StatusDiv","StatusGreenDiv","PaddedDiv","TeamListView","list","search","propTypes","bool","arrayOf","shape","text","string","isRequired","version","status","length","map","item","index","PUBLISHED","array","SearchAction","handleInputChange","func"],"mappings":";;AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAI,IAAIC,OAAjB,QAAgC,mBAAhC;AAEA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB,C,CACA;AACA;;AAEA,SAASC,gBAAT,QAAiC,aAAjC;AACA,SACEC,aADF,EAEEC,iBAFF,EAGEC,mBAHF,EAIEC,gBAJF,EAKEC,cALF,EAMEC,OANF,EAOEC,UAPF,EAQEC,SARF,EASEC,cATF,EAUEC,SAVF,QAWO,UAXP;;AAaA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAM,GAAG;AAAjB,CAAD,kBACnB,oBAAC,aAAD;AAAe,EAAA,OAAO,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEI,oBAAC,gBAAD;AACE,EAAA,KAAK,eAAE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADT;AAEE,EAAA,MAAM,eAAE,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAEA,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,eAOE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAED,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAPF,CADF;;AAcAD,YAAY,CAACG,SAAb,GAAyB;AACvBD,EAAAA,MAAM,EAAElB,SAAS,CAACoB,IADK;AAEvBH,EAAAA,IAAI,EAAEjB,SAAS,CAACqB,OAAV,CACJrB,SAAS,CAACsB,KAAV,CAAgB;AACdC,IAAAA,IAAI,EAAEvB,SAAS,CAACwB,MAAV,CAAiBC,UADT;AAEdC,IAAAA,OAAO,EAAE1B,SAAS,CAACwB,MAFL;AAGdG,IAAAA,MAAM,EAAE3B,SAAS,CAACwB;AAHJ,GAAhB,CADI,EAMJC;AARqB,CAAzB;;AAWA,MAAMxB,IAAI,GAAG,CAAC;AAAEgB,EAAAA;AAAF,CAAD,KAAc;AACzB,MAAIA,IAAI,CAACW,MAAL,GAAc,CAAlB,EAAqB;AACnB,wBACE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGX,IAAI,CAACY,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,kBACR,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BD,IAAI,CAACP,IAAlC,CADF,CADF,eAIE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BO,IAAI,CAACJ,OAAlC,CADF,CAJF,eAOE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGI,IAAI,CAACH,MAAL,KAAgBtB,gBAAgB,CAAC2B,SAAjC,gBACC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BF,IAAI,CAACH,MAAlC,CADF,CADD,gBAKC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BG,IAAI,CAACH,MAAlC,CADF,CANJ,CAPF,CADD,CADH,CADF;AAyBD;;AACD,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADF;AAKD,CAjCD;;AAmCA1B,IAAI,CAACkB,SAAL,GAAiB;AACfF,EAAAA,IAAI,EAAEjB,SAAS,CAACiC;AADD,CAAjB;;AAIA,MAAMC,YAAY,GAAG,CAAC;AAAEhB,EAAAA,MAAF;AAAUiB,EAAAA;AAAV,CAAD,KACnBjB,MAAM,iBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,mBAAD;AACE,EAAA,WAAW,EAAC,WADd;AAEE,EAAA,QAAQ,EAAEiB,iBAFZ;AAGE,EAAA,cAAc,eACZ,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAFJ;;AAeAD,YAAY,CAACf,SAAb,GAAyB;AACvBD,EAAAA,MAAM,EAAElB,SAAS,CAACoB,IADK;AAEvBe,EAAAA,iBAAiB,EAAEnC,SAAS,CAACoC;AAFN,CAAzB;AAKA,eAAepB,YAAfsourcesContent":["/**\n *\n * TeamListView\n *\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List as MuiList } from \"@material-ui/core\";\n\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Typography from \"@material-ui/core/Typography\";\n// import SearchIcon from \"@material-ui/icons/Search\";\n// import Alert from \"@material-ui/lab/Alert\";\n\nimport { DocumentStatuses } from \"utils/enums\";\nimport {\n  MuiCardStyled,\n  CardContentStyled,\n  OutlinedInputStyled,\n  CardHeaderStyled,\n  ListItemStyled,\n  TextDiv,\n  VersionDiv,\n  StatusDiv,\n  StatusGreenDiv,\n  PaddedDiv,\n} from \"./styled\";\n\nconst TeamListView = ({ list, search = false }) => (\n  <MuiCardStyled variant=\"outlined\">\n    {\n      <CardHeaderStyled\n        title={<Typography variant=\"h6\"></Typography>}\n        action={<SearchAction search={search} />}\n      />\n    }\n    <CardContentStyled>\n      <List list={list} />\n    </CardContentStyled>\n  </MuiCardStyled>\n);\n\nTeamListView.propTypes = {\n  search: PropTypes.bool,\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      text: PropTypes.string.isRequired,\n      version: PropTypes.string,\n      status: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nconst List = ({ list }) => {\n  if (list.length > 0) {\n    return (\n      <MuiList dense={false}>\n        {list.map((item, index) => (\n          <ListItemStyled key={index}>\n            <TextDiv>\n              <Typography variant=\"body2\">{item.text}</Typography>\n            </TextDiv>\n            <VersionDiv>\n              <Typography variant=\"body2\">{item.version}</Typography>\n            </VersionDiv>\n            <StatusDiv>\n              {item.status === DocumentStatuses.PUBLISHED ? (\n                <StatusGreenDiv>\n                  <Typography variant=\"body2\">{item.status}</Typography>\n                </StatusGreenDiv>\n              ) : (\n                <StatusDiv>\n                  <Typography variant=\"body2\">{item.status}</Typography>\n                </StatusDiv>\n              )}\n            </StatusDiv>\n          </ListItemStyled>\n        ))}\n      </MuiList>\n    );\n  }\n  return (\n    <PaddedDiv>\n      <Alert severity=\"info\">No items to display!</Alert>\n    </PaddedDiv>\n  );\n};\n\nList.propTypes = {\n  list: PropTypes.array,\n};\n\nconst SearchAction = ({ search, handleInputChange }) =>\n  search && (\n    <div>\n      <OutlinedInputStyled\n        placeholder=\"Search...\"\n        onChange={handleInputChange}\n        startAdornment={\n          <InputAdornment position=\"start\">\n            {/* <SearchIcon color=\"disabled\" fontSize=\"small\" /> */}\n          </InputAdornment>\n        }\n      />\n    </div>\n  );\n\nSearchAction.propTypes = {\n  search: PropTypes.bool,\n  handleInputChange: PropTypes.func,\n};\n\nexport default TeamListView;\n\n// import React from \"react\";\n// import Button from \"../button.component\";\n// import { Link } from \"react-router-dom\";\n// import styled from \"styled-components\";\n\n// import PropTypes from \"prop-types\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import ListItem from \"@material-ui/core/ListItem\";\n// import { List as MuiList } from \"@material-ui/core\";\n\n// import ListItemText from \"@material-ui/core/ListItemText\";\n// import { FixedSizeList } from \"react-window\";\n// import MaterialTable from \"material-table\";\n// import InputAdornment from \"@material-ui/core/InputAdornment\";\n// import Typography from \"@material-ui/core/Typography\";\n// import SearchIcon from \"@material-ui/icons/Search\";\n// import Alert from \"@material-ui/lab/Alert\";\n// import {\n//   MuiCardStyled,\n//   CardContentStyled,\n//   OutlinedInputStyled,\n//   CardHeaderStyled,\n//   ListItemStyled,\n//   TextDiv,\n//   VersionDiv,\n//   StatusDiv,\n//   StatusGreenDiv,\n//   PaddedDiv,\n// } from \"./styled\";\n// // import { List as MuiList } from \"@material-ui/core\";\n\n// // const useStyles = makeStyles((theme) => ({\n// //   root: {\n// //     width: \"100%\",\n// //     height: 400,\n// //     maxWidth: 300,\n// //     backgroundColor: theme.palette.background.paper,\n// //   },\n// // }));\n\n// // function renderRow(props) {\n// //   const { index, style } = props;\n\n// //   return (\n// //     <ListItem button style={style} key={index}>\n// //       <ListItemText primary={`Item ${index + 1}`} />\n// //     </ListItem>\n// //   );\n// // }\n\n// // renderRow.propTypes = {\n// //   index: PropTypes.number.isRequired,\n// //   style: PropTypes.object.isRequired,\n// // };\n\n// export default function TeamListView({ teams = [] }) {\n//   const columns = [{ title: \"Name\", field: \"name\" }];\n\n//   // const classes = useStyles();\n\n//   return (\n//     <List list={teams}></List>\n//     // <div className={classes.root}>\n//     //   <FixedSizeList\n//     //     height={400}\n//     //     width={300}\n//     //     itemSize={46}\n//     //     itemCount={teams.length}\n//     //   >\n//     //     {renderRow}\n//     //   </FixedSizeList>\n//     // </div>\n//   );\n// }\n// const List = ({ list }) => {\n//   if (list.length > 0) {\n//     return (\n//       <MuiList dense={false}>\n//         {list.map((item, index) => (\n//           <ListItemStyled key={index}>\n//             <TextDiv>\n//               <Typography variant=\"body2\">{item.text}</Typography>\n//             </TextDiv>\n//             <VersionDiv>\n//               <Typography variant=\"body2\">{item.version}</Typography>\n//             </VersionDiv>\n//             <StatusDiv>\n//               <StatusGreenDiv>\n//                 <Typography variant=\"body2\">{item.status}</Typography>\n//               </StatusGreenDiv>\n//               ) : (\n//               <StatusDiv>\n//                 <Typography variant=\"body2\">{item.status}</Typography>\n//               </StatusDiv>\n//             </StatusDiv>\n//           </ListItemStyled>\n//         ))}\n//       </MuiList>\n//     );\n//   }\n//   return (\n//     <PaddedDiv>\n//       <Alert severity=\"info\">No items to display!</Alert>\n//     </PaddedDiv>\n//   );\n// };\n\n// List.propTypes = {\n//   list: PropTypes.array,\n// };\n\n// // return (\n// // <DataTypesPageStyled>\n// //   <DataTypesListStyled>\n// //     <MaterialTable\n// //       title=\"Teams\"\n// //       columns={columns}\n// //       data={teams}\n// //       options={{\n// //         filtering: false,\n// //         editable: false,\n// //       }}\n\n// // editable={{\n// //   onRowUpdate: (newData, oldData) =>\n// //     new Promise((resolve) => {\n// //       setTimeout(() => {\n// //         resolve();\n// //         if (oldData) {\n// //           onDataTypeEdit(newData);\n// //         }\n// //       }, 600);\n// //     }),\n// // }}\n// //     />\n// //     <Link to=\"/create_team\">\n// //       <Button\n// //         color=\"primary\"\n// //         variant=\"contained\"\n// //         type=\"submit\"\n// //         data-testid=\"sign-up-button\"\n// //       >\n// //         Create New DataType\n// //       </Button>\n// //     </Link>\n// //   </DataTypesListStyled>\n// // </DataTypesPageStyled>\n// // );\n// // }\n\n// const DataTypesPageStyled = styled.div`\n//   min-height: 100vh;\n// `;\n\n// const DataTypesListStyled = styled.div`\n//   display: grid;\n//   gap: 20px;\n//   text-align: right;\n//   padding: 50px;\n//   button {\n//     height: 50px;\n//     width: 250px;\n//     padding: 20px;\n//   }\n// `;\n"]},"metadata":{},"sourceType":"module"}