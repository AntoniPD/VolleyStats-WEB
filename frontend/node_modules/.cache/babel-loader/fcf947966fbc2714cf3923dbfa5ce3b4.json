{"ast":null,"code":"var _jsxFileName = \"/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/register.component.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../actions/auth\";\nimport { clearMessage } from \"../actions/message\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }, \"This field is required!\");\n  }\n};\n\nconst username = value => {\n  if (!isEmail(value)) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, \"This is not a valid username.\");\n  }\n};\n\nconst vname = value => {\n  if (value.length < 3 || value.length > 20) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, \"The name must be between 3 and 20 characters.\");\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 8 || value.length > 40) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, \"The password must be between 8 and 40 characters.\");\n  }\n};\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.state = {\n      name: \"\",\n      username: \"\",\n      password: \"\",\n      roles: [],\n      successful: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(clearMessage);\n  }\n\n  onChangeName(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n    this.setState({\n      successful: false\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      this.props.dispatch(register(this.state.name, this.state.username, this.state.password)).then(() => {\n        this.setState({\n          successful: true\n        });\n      }).catch(() => {\n        this.setState({\n          successful: false\n        });\n      });\n    }\n  }\n\n  render() {\n    const {\n      message\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n      alt: \"profile-img\",\n      className: \"profile-img-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleRegister,\n      ref: c => {\n        this.form = c;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, !this.state.successful && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.onChangeName,\n      validations: [required, vname],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      className: \"form-control\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.onChangeUsername,\n      validations: [required, username],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 19\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.onChangePassword,\n      validations: [required, vpassword],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"statistcheck\",\n      checked: this.state.roles.includes(\"Statist\"),\n      onChange: event => {\n        if (!event.target.checked) {\n          this.state.roles.push(\"Statist\");\n        } else {\n          this.state.roles = this.state.roles.filter(role => role !== \"Statist\");\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"role\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 19\n      }\n    }, \"Statist\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"playercheck\",\n      checked: this.state.roles.includes(\"Player\"),\n      onChange: event => {\n        if (!event.target.checked) {\n          this.state.roles.push(\"Player\");\n        } else {\n          this.state.roles = this.state.roles.filter(role => role !== \"Player\");\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"role\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 19\n      }\n    }, \"Player\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"fancheck\",\n      checked: this.state.roles.includes(\"Fan\"),\n      onChange: event => {\n        console.log(event.target.checked);\n\n        if (!event.target.checked) {\n          this.state.roles = this.state.roles.filter(role => role !== \"Fan\");\n        } else {\n          console.log(this.state.roles.includes(\"Fan\"));\n          console.log(\"in\");\n          this.state.roles.push(\"Fan\");\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"role\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 19\n      }\n    }, \"Fan\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 19\n      }\n    }, \"Sign Up\"))), message && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.successful ? \"alert alert-success\" : \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }, message)), /*#__PURE__*/React.createElement(CheckButton, {\n      style: {\n        display: \"none\"\n      },\n      ref: c => {\n        this.checkBtn = c;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const {\n    message\n  } = state.message;\n  return {\n    message\n  };\n}\n\nexport default connect(mapStateToProps)(Register);","map":{"version":3,"sources":["/Users/antony.dobrenov/nodejs_projects/VolleyStats-WEB/frontend/src/components/register.component.js"],"names":["React","Component","Form","Input","CheckButton","isEmail","connect","register","clearMessage","required","value","username","vname","length","vpassword","Register","constructor","props","handleRegister","bind","onChangeName","onChangeUsername","onChangePassword","state","name","password","roles","successful","componentDidMount","dispatch","e","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","then","catch","render","message","c","includes","event","checked","push","filter","role","console","log","display","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport { connect } from \"react-redux\";\nimport { register } from \"../actions/auth\";\nimport { clearMessage } from \"../actions/message\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst username = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid username.\n      </div>\n    );\n  }\n};\n\nconst vname = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The name must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 8 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 8 and 40 characters.\n      </div>\n    );\n  }\n};\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      name: \"\",\n      username: \"\",\n      password: \"\",\n      roles: [],\n      successful: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(clearMessage);\n  }\n\n  onChangeName(e) {\n    this.setState({\n      name: e.target.value,\n    });\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      successful: false,\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      this.props\n        .dispatch(\n          register(this.state.name, this.state.username, this.state.password)\n        )\n        .then(() => {\n          this.setState({\n            successful: true,\n          });\n        })\n        .catch(() => {\n          this.setState({\n            successful: false,\n          });\n        });\n    }\n  }\n\n  render() {\n    const { message } = this.props;\n\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={(c) => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"name\"\n                    value={this.state.name}\n                    onChange={this.onChangeName}\n                    validations={[required, vname]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Input\n                    type=\"email\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required, username]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n                <div>\n                  <input\n                    type=\"checkbox\"\n                    id=\"statistcheck\"\n                    checked={this.state.roles.includes(\"Statist\")}\n                    onChange={(event) => {\n                      if (!event.target.checked) {\n                        this.state.roles.push(\"Statist\");\n                      } else {\n                        this.state.roles = this.state.roles.filter(\n                          (role) => role !== \"Statist\"\n                        );\n                      }\n                    }}\n                  />\n                  <label for=\"role\">Statist</label>\n                </div>\n                <div>\n                  <input\n                    type=\"checkbox\"\n                    id=\"playercheck\"\n                    checked={this.state.roles.includes(\"Player\")}\n                    onChange={(event) => {\n                      if (!event.target.checked) {\n                        this.state.roles.push(\"Player\");\n                      } else {\n                        this.state.roles = this.state.roles.filter(\n                          (role) => role !== \"Player\"\n                        );\n                      }\n                    }}\n                  />\n                  <label for=\"role\">Player</label>\n                </div>\n                <div>\n                  <input\n                    type=\"checkbox\"\n                    id=\"fancheck\"\n                    checked={this.state.roles.includes(\"Fan\")}\n                    onChange={(event) => {\n                      console.log(event.target.checked);\n                      if (!event.target.checked) {\n                        this.state.roles = this.state.roles.filter(\n                          (role) => role !== \"Fan\"\n                        );\n                      } else {\n                        console.log(this.state.roles.includes(\"Fan\"));\n                        console.log(\"in\");\n                        this.state.roles.push(\"Fan\");\n                      }\n                    }}\n                  />\n                  <label for=\"role\">Fan</label>\n                </div>\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n              </div>\n            )}\n\n            {message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={(c) => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { message } = state.message;\n  return {\n    message,\n  };\n}\n\nexport default connect(mapStateToProps)(Register);\n"]},"metadata":{},"sourceType":"module"}